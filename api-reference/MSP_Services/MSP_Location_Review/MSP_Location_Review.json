{
  "openapi": "3.0.1",
  "info": {
    "title": "msp-location-review-service",
    "description": "A service used for storing location reviews and images",
    "contact": {
      "name": "P3 digital services GmbH",
      "email": "contact@energystacks.io"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://p3-acc.energystacks.io/msp-location-review/v1",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/location/images/{locationImageId}/{userId}/{approvalState}": {
      "put": {
        "tags": [
          "Location Images"
        ],
        "summary": "Review location image",
        "description": "Performs a review of the location image submission of a user",
        "operationId": "reviewLocationImage",
        "parameters": [
          {
            "name": "locationImageId",
            "in": "path",
            "description": "The ID of the location image",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The ID of the user doing review",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approvalState",
            "in": "path",
            "description": "The approval state which should be set",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "SUBMITTED",
                "APPROVED",
                "REJECTED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "The API key was not found or is not valid."
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Image already reviewed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                }
              }
            }
          }
        }
      }
    },
    "/location/review": {
      "post": {
        "tags": [
          "Location Review"
        ],
        "summary": "Submits a review of the location for a user",
        "description": "Submits a review of the location for a user",
        "operationId": "submitReview",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "The id of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "description": "The id of the location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationReviewSubmitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "The API key was not found or is not valid."
          }
        }
      }
    },
    "/location/images/{userId}/{locationId}/{imageCategory}": {
      "post": {
        "tags": [
          "Location Images"
        ],
        "summary": "Submit an image for the location",
        "description": "Submits an image for the specified charging station location and image category",
        "operationId": "submitLocationImage",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "path",
            "description": "The id of the location",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "imageCategory",
            "in": "path",
            "description": "Category of the image",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CHARGER",
                "ENTRANCE",
                "LOCATION",
                "NETWORK",
                "OPERATOR",
                "OTHER",
                "OWNER"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Image of the location",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation"
          },
          "400": {
            "description": "The request was not valid"
          },
          "403": {
            "description": "The API key was not found or is not valid."
          },
          "409": {
            "description": "The image was already uploaded"
          },
          "500": {
            "description": "The image can not be processed"
          }
        }
      }
    },
    "/location/review/{user_id}/{location_id}": {
      "get": {
        "tags": [
          "Location Review"
        ],
        "summary": "Get the active review of the location of the current user",
        "description": "Get the active review of the location of the current user",
        "operationId": "getActiveReviewOfCurrentUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "The id of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_id",
            "in": "path",
            "description": "The id of the location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationReviewGetResponse"
                }
              }
            }
          },
          "403": {
            "description": "The API key was not found or is not valid."
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/location/images": {
      "get": {
        "tags": [
          "Location Images"
        ],
        "summary": "Get location images for review",
        "description": "Returns all location images which were submitted but not reviewed yet",
        "operationId": "getLocationImagesForReview",
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationImageResponse"
                  }
                }
              }
            }
          },
          "403": {
            "description": "The API key was not found or is not valid."
          },
          "404": {
            "description": "No images for review were found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationImageResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/location/images/{locationImageId}/{imageResolution}": {
      "get": {
        "tags": [
          "Location Images"
        ],
        "summary": "Get approved image by resolution",
        "description": "Returns the location image for the given id and image resolution",
        "operationId": "getApprovedImageByResolution",
        "parameters": [
          {
            "name": "locationImageId",
            "in": "path",
            "description": "The ID of the location image",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "imageResolution",
            "in": "path",
            "description": "The location image resolution",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ORIGINAL",
                "HIGH_RES",
                "THUMBNAIL"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "The API key was not found or is not valid."
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SuccessMessageDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "ErrorMessageDto": {
        "required": [
          "errorCode",
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Example error message"
          },
          "errorCode": {
            "type": "string",
            "description": "The error code",
            "example": "EXAMPLE_ERROR_CODE"
          }
        }
      },
      "CreatedDto": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "UUID of the created entity",
            "example": "67e7dfdf-3757-4479-a905-3bbacb75490a"
          }
        }
      },
      "LocationReviewSubmitRequest": {
        "required": [
          "options",
          "stars"
        ],
        "type": "object",
        "properties": {
          "stars": {
            "type": "integer",
            "description": "Number of stars",
            "format": "int32",
            "example": 3
          },
          "options": {
            "type": "array",
            "description": "The chosen options",
            "items": {
              "type": "string",
              "description": "The chosen options",
              "enum": [
                "CLEAN",
                "NOT_CLEAN",
                "EASY",
                "NOT_EASY",
                "NO_FUNCTIONALITY",
                "RECOMMENDED",
                "NOT_RECOMMENDED",
                "GOOD",
                "NOT_GOOD",
                "NO_CARD",
                "AMENITIES",
                "NO_AMENITIES",
                "CABLE",
                "NO_CABLE",
                "PRIVATE",
                "SEMI_PRIVATE",
                "PUBLIC"
              ]
            }
          }
        }
      },
      "LocationReviewGetResponse": {
        "required": [
          "active",
          "dateCreated",
          "dateUpdated",
          "id",
          "locationId",
          "options",
          "stars"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the location review",
            "format": "int64"
          },
          "locationId": {
            "type": "string",
            "description": "The id of the location"
          },
          "dateCreated": {
            "type": "string",
            "description": "The creation date",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "description": "The last modification date",
            "format": "date-time"
          },
          "stars": {
            "type": "integer",
            "description": "Number of stars",
            "format": "int32"
          },
          "options": {
            "type": "array",
            "description": "The chosen options",
            "items": {
              "type": "string",
              "description": "The chosen options",
              "enum": [
                "CLEAN",
                "NOT_CLEAN",
                "EASY",
                "NOT_EASY",
                "NO_FUNCTIONALITY",
                "RECOMMENDED",
                "NOT_RECOMMENDED",
                "GOOD",
                "NOT_GOOD",
                "NO_CARD",
                "AMENITIES",
                "NO_AMENITIES",
                "CABLE",
                "NO_CABLE",
                "PRIVATE",
                "SEMI_PRIVATE",
                "PUBLIC"
              ]
            }
          },
          "active": {
            "type": "boolean",
            "description": "Is active location review"
          }
        }
      },
      "LocationImageResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of the location image",
            "format": "int64"
          },
          "user_id": {
            "type": "string",
            "description": "The ID of the user which submitted the image"
          },
          "location_id": {
            "type": "string",
            "description": "The ID of the location"
          },
          "image_category": {
            "type": "string",
            "description": "The image category",
            "enum": [
              "CHARGER",
              "ENTRANCE",
              "LOCATION",
              "NETWORK",
              "OPERATOR",
              "OTHER",
              "OWNER"
            ]
          },
          "url_high_res": {
            "type": "string",
            "description": "The URL of the high resolution image"
          },
          "url_thumbnail": {
            "type": "string",
            "description": "The URL of the thumbnail image"
          },
          "date_submitted": {
            "type": "string",
            "description": "The date and time of the image submission by the user",
            "format": "date-time"
          }
        }
      }
    },
    "examples": {
      "IMAGE_ALREADY_UPLOADED": {
        "value": "{\n  \"message\" : \"The image was already uploaded\",\n  \"errorCode\" : \"IMAGE_ALREADY_UPLOADED\"\n}"
      },
      "IMAGE_ALREADY_REVIEWED": {
        "value": "{\n  \"message\" : \"The image was already reviewed\",\n  \"errorCode\" : \"IMAGE_ALREADY_REVIEWED\"\n}"
      },
      "MISSING_IMAGE_EXTENSION": {
        "value": "{\n  \"message\" : \"Image extension is missing\",\n  \"errorCode\" : \"MISSING_IMAGE_EXTENSION\"\n}"
      },
      "CAN_NOT_READ_IMAGE": {
        "value": "{\n  \"message\" : \"The image could not be read\",\n  \"errorCode\" : \"CAN_NOT_READ_IMAGE\"\n}"
      },
      "UNPROCESSABLE_IMAGE_FORMAT": {
        "value": "{\n  \"message\" : \"The image could not be read\",\n  \"errorCode\" : \"UNPROCESSABLE_IMAGE_FORMAT\"\n}"
      },
      "CAN_NOT_PROCESS_IMAGE": {
        "value": "{\n  \"message\" : \"The image could not be processed.\",\n  \"errorCode\" : \"CAN_NOT_PROCESS_IMAGE\"\n}"
      },
      "CAN_NOT_STORE_IMAGES": {
        "value": "{\n  \"message\" : \"The image could not be stored.\",\n  \"errorCode\" : \"CAN_NOT_STORE_IMAGES\"\n}"
      },
      "CAN_NOT_INITIALIZE_FOLDER": {
        "value": "{\n  \"message\" : \"The directory for location review service images could not be initialized\",\n  \"errorCode\" : \"CAN_NOT_INITIALIZE_FOLDER\"\n}"
      },
      "UNSORTABLE_COLUMN": {
        "value": "{\n  \"message\" : \"The entered sorting column is not sortable in ElasticSearch (Column is not a @Keyword).\",\n  \"errorCode\" : \"UNSORTABLE_COLUMN\"\n}"
      },
      "REST_STATUS_ELASTICSEARCH_RELATED": {
        "value": "{\n  \"message\" : \"RestStatusException related to ElasticSearch\",\n  \"errorCode\" : \"REST_STATUS_ELASTICSEARCH_RELATED\"\n}"
      },
      "PROCESSING_ERROR": {
        "value": "{\n  \"message\" : \"Error while processing the data\",\n  \"errorCode\" : \"PROCESSING_ERROR\"\n}"
      },
      "ACCESS_DENIED": {
        "value": "{\n  \"message\" : \"Access to route has been denied.\",\n  \"errorCode\" : \"ACCESS_DENIED\"\n}"
      },
      "INTERNAL_SERVER_ERROR": {
        "value": "{\n  \"message\" : \"An error occurred\",\n  \"errorCode\" : \"INTERNAL_SERVER_ERROR\"\n}"
      },
      "BAD_REQUEST": {
        "value": "{\n  \"message\" : \"Bad request\",\n  \"errorCode\" : \"BAD_REQUEST\"\n}"
      },
      "NOT_FOUND": {
        "value": "{\n  \"message\" : \"Requested object not found\",\n  \"errorCode\" : \"NOT_FOUND\"\n}"
      },
      "UNAUTHORIZED": {
        "value": "{\n  \"message\" : \"Unauthorized\",\n  \"errorCode\" : \"UNAUTHORIZED\"\n}"
      },
      "FORBIDDEN": {
        "value": "{\n  \"message\" : \"Forbidden\",\n  \"errorCode\" : \"FORBIDDEN\"\n}"
      },
      "UNAUTHENTICATED": {
        "value": "{\n  \"message\" : \"Unauthenticated\",\n  \"errorCode\" : \"UNAUTHENTICATED\"\n}"
      },
      "METHOD_ARGUMENT_TYPE_MISMATCH": {
        "value": "{\n  \"message\" : \"Failed to convert value to required type\",\n  \"errorCode\" : \"METHOD_ARGUMENT_TYPE_MISMATCH\"\n}"
      },
      "MAXIMUM_UPLOAD_SIZE_EXCEEDED": {
        "value": "{\n  \"message\" : \"Maximum upload size exceeded\",\n  \"errorCode\" : \"MAXIMUM_UPLOAD_SIZE_EXCEEDED\"\n}"
      },
      "METHOD_NOT_ALLOWED": {
        "value": "{\n  \"message\" : \"Request method is not supported\",\n  \"errorCode\" : \"METHOD_NOT_ALLOWED\"\n}"
      },
      "MISSING_REQUEST_PARAMETER": {
        "value": "{\n  \"message\" : \"Required request parameter is not present\",\n  \"errorCode\" : \"MISSING_REQUEST_PARAMETER\"\n}"
      },
      "MISSING_REQUEST_PART": {
        "value": "{\n  \"message\" : \"Required request part is not present\",\n  \"errorCode\" : \"MISSING_REQUEST_PART\"\n}"
      },
      "UNSUPPORTED_MEDIA_TYPE": {
        "value": "{\n  \"message\" : \"Media type is not supported\",\n  \"errorCode\" : \"UNSUPPORTED_MEDIA_TYPE\"\n}"
      },
      "LIST_CONTAINS_NULL_VALUES": {
        "value": "{\n  \"message\" : \"List contains null values\",\n  \"errorCode\" : \"LIST_CONTAINS_NULL_VALUES\"\n}"
      },
      "REMOTE_CALL_FAILED": {
        "value": "{\n  \"message\" : \"Call to remote API returned an error response\",\n  \"errorCode\" : \"REMOTE_CALL_FAILED\"\n}"
      },
      "ALREADY_EXISTS": {
        "value": "{\n  \"message\" : \"Object already exists\",\n  \"errorCode\" : \"ALREADY_EXISTS\"\n}"
      },
      "SOFTLY_DELETED": {
        "value": "{\n  \"message\" : \"Object is softly deleted\",\n  \"errorCode\" : \"SOFTLY_DELETED\"\n}"
      },
      "WRONG_SORTING_COLUMN": {
        "value": "{\n  \"message\" : \"The entered sorting column name does not exist.\",\n  \"errorCode\" : \"WRONG_SORTING_COLUMN\"\n}"
      },
      "COULD_NOT_EXTRACT_ERROR_FROM_RESPONSE": {
        "value": "{\n  \"message\" : \"Could not extract error from the response.\",\n  \"errorCode\" : \"COULD_NOT_EXTRACT_ERROR_FROM_RESPONSE\"\n}"
      },
      "FAILED_TO_DELETE_TEMPORARY_FILE": {
        "value": "{\n  \"message\" : \"Failed to delete temporary file\",\n  \"errorCode\" : \"FAILED_TO_DELETE_TEMPORARY_FILE\"\n}"
      },
      "TENANT_ID_MUST_BE_SINGLETON": {
        "value": "{\n  \"message\" : \"Tenant ID must be a single value parameter\",\n  \"errorCode\" : \"TENANT_ID_MUST_BE_SINGLETON\"\n}"
      },
      "TENANT_ID_MUST_BE_INTEGER": {
        "value": "{\n  \"message\" : \"Tenant ID must be integer\",\n  \"errorCode\" : \"TENANT_ID_MUST_BE_INTEGER\"\n}"
      },
      "INVALID_PROPERTY": {
        "value": "{\n  \"message\" : \"Requested property is not valid.\",\n  \"errorCode\" : \"INVALID_PROPERTY\"\n}"
      },
      "INVALID_LOCATION": {
        "value": "{\n  \"message\" : \"Location does not exist\",\n  \"errorCode\" : \"INVALID_LOCATION\"\n}"
      },
      "USER_NOT_FOUND": {
        "value": "{\n  \"message\" : \"The entered user does not exist.\",\n  \"errorCode\" : \"USER_NOT_FOUND\"\n}"
      },
      "USER_ALREADY_HAS_ACCESS": {
        "value": "{\n  \"message\" : \"The user already has access\",\n  \"errorCode\" : \"USER_ALREADY_HAS_ACCESS\"\n}"
      },
      "USER_ACCESS_REQUEST_NOT_FOUND": {
        "value": "{\n  \"message\" : \"The entered user access request does not exist.\",\n  \"errorCode\" : \"USER_ACCESS_REQUEST_NOT_FOUND\"\n}"
      },
      "FILE_IS_NOT_IMAGE": {
        "value": "{\n  \"message\" : \"The file isn't image.\",\n  \"errorCode\" : \"FILE_IS_NOT_IMAGE\"\n}"
      },
      "FORMAT_NOT_SUPPORTED": {
        "value": "{\n  \"message\" : \"The logo format not supported\",\n  \"errorCode\" : \"FORMAT_NOT_SUPPORTED\"\n}"
      },
      "EXTENSION_MISSING": {
        "value": "{\n  \"message\" : \"The logo extension missing\",\n  \"errorCode\" : \"EXTENSION_MISSING\"\n}"
      }
    },
    "headers": {
      "api-category": {
        "description": "MSP Services",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "display-name": {
        "description": "MSP Location Review",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    }
  }
}