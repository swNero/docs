{
  "openapi": "3.0.1",
  "info": {
    "title": "obelis-service",
    "description": "A service for collecting and reviewing charging hub data",
    "contact": {
      "name": "P3 digital services GmbH",
      "email": "contact@energystacks.io"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://p3-acc.obelis.energystacks.io/obelis/v1",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Processed Reports - Renewal",
      "description": "Operations for processed Renewal reports."
    },
    {
      "name": "Charging Hub Processed Reports - Ad Hoc Tariff",
      "description": "Operations for processed Ad Hoc Tariff reports."
    },
    {
      "name": "Global Processed Reports",
      "description": "API for retrieving global processed reports for a specific month."
    },
    {
      "name": "Raw Reports - Ratings",
      "description": "Operations for raw Rating reports."
    },
    {
      "name": "Charging Station Reports",
      "description": "API for retrieving processed reports for a specific charging hub."
    },
    {
      "name": "Charging stations - Processed Reports - Charging Points Defects",
      "description": "Operations for Charging Point Defects reports (charge point operator)."
    },
    {
      "name": "Raw Reports - Non-Discriminatory access",
      "description": "Operations for raw Non-Discriminatory access reports."
    },
    {
      "name": "Processed Reports - Non-Discriminatory access",
      "description": "Operations for processed Non-Discriminatory access reports."
    },
    {
      "name": "Raw Reports - Renewal",
      "description": "Operations for raw Renewal reports."
    },
    {
      "name": "Charging Point",
      "description": "Operations for charging point."
    },
    {
      "name": "Processed Reports - Rating",
      "description": "Operations for raw processed Rating reports."
    },
    {
      "name": "Processed Reports - Rating",
      "description": "Operations for processed Rating reports."
    },
    {
      "name": "Charging Hub - Raw Reports - Facility Damages",
      "description": "Operations for raw Facility Damages reports."
    },
    {
      "name": "Charging Hub",
      "description": "Operations for charging hub."
    },
    {
      "name": "Charging Hub - Raw Reports - Ad Hoc Tariff",
      "description": "Operations for raw Ad Hoc Tariff."
    },
    {
      "name": "Raw Reports - Hotline Ratings",
      "description": "Operations for raw Hotline Rating reports."
    },
    {
      "name": "Charging Points - Raw Reports - Defects",
      "description": "Operations for raw Charging Point Defects reports."
    },
    {
      "name": "Charging Station",
      "description": "Operations for charging station."
    },
    {
      "name": "Charging Hub Processed Reports - Facility Damages",
      "description": "Operations for processed Facility Damages reports."
    },
    {
      "name": "Processed Reports - Hotline Ratings",
      "description": "Operations for processed Hotline Rating reports."
    },
    {
      "name": "Charging Hub Reports",
      "description": "API for retrieving processed reports for a specific charging hub."
    },
    {
      "name": "Charging session",
      "description": "Operations for charging session."
    }
  ],
  "paths": {
    "/raw-reports/nondiscriminatory-access/{uid}": {
      "put": {
        "tags": [
          "Raw Reports - Non-Discriminatory access"
        ],
        "summary": "Edit a raw Non-Discriminatory access report.",
        "description": "Edit a raw Non-Discriminatory access report.",
        "operationId": "editRawNonDiscriminatoryAccessReport",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NonDiscriminatoryAccessReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "MONTH_ON_REPORT_NOT_VALID": {
                    "description": "MONTH_ON_REPORT_NOT_VALID",
                    "$ref": "#/components/examples/MONTH_ON_REPORT_NOT_VALID"
                  },
                  "PROVIDER_GROUP_DO_NOT_START_WITH_2_CAPITAL_LETTERS": {
                    "description": "PROVIDER_GROUP_DO_NOT_START_WITH_2_CAPITAL_LETTERS",
                    "$ref": "#/components/examples/PROVIDER_GROUP_DO_NOT_START_WITH_2_CAPITAL_LETTERS"
                  },
                  "VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM": {
                    "description": "VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM",
                    "$ref": "#/components/examples/VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM"
                  },
                  "PROVIDER_GROUP_CHANGED": {
                    "description": "PROVIDER_GROUP_CHANGED",
                    "$ref": "#/components/examples/PROVIDER_GROUP_CHANGED"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "NON_DISCRIMINATORY_ACCESS_REPORT_NOT_FOUND": {
                    "description": "NON_DISCRIMINATORY_ACCESS_REPORT_NOT_FOUND",
                    "$ref": "#/components/examples/NON_DISCRIMINATORY_ACCESS_REPORT_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/hotline-ratings/{uid}": {
      "put": {
        "tags": [
          "Raw Reports - Hotline Ratings"
        ],
        "summary": "Edit existing raw Hotline Rating report.",
        "description": "Replace hotline rating report for a specific month.",
        "operationId": "editAdHocTariffRawReport",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditHotlineRatingReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "MONTH_ON_REPORT_NOT_VALID": {
                    "description": "MONTH_ON_REPORT_NOT_VALID",
                    "$ref": "#/components/examples/MONTH_ON_REPORT_NOT_VALID"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "HOTLINE_RATING_REPORT_UID_NOT_FOUND": {
                    "description": "HOTLINE_RATING_REPORT_UID_NOT_FOUND",
                    "$ref": "#/components/examples/HOTLINE_RATING_REPORT_UID_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-stations/charging-points/renewal/{uid}": {
      "put": {
        "tags": [
          "Raw Reports - Renewal"
        ],
        "summary": "Update Charging Point raw Renewal report.",
        "description": "Update new Charging Point raw Renewal report.",
        "operationId": "updateChargingPointRenewalRawReport",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditChargingPointRenewalReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "RENEWAL_START_TIME_NEEDS_TO_BE_BEFORE_END_TIME": {
                    "description": "RENEWAL_START_TIME_NEEDS_TO_BE_BEFORE_END_TIME",
                    "$ref": "#/components/examples/RENEWAL_START_TIME_NEEDS_TO_BE_BEFORE_END_TIME"
                  },
                  "CHARGING_POINT_CONNECTED_TO_PROVIDED_CHARGING_HUB_DOES_NOT_EXIST": {
                    "description": "CHARGING_POINT_CONNECTED_TO_PROVIDED_CHARGING_HUB_DOES_NOT_EXIST",
                    "$ref": "#/components/examples/CHARGING_POINT_CONNECTED_TO_PROVIDED_CHARGING_HUB_DOES_NOT_EXIST"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "RENEWAL_RAW_CHARGING_POINT_DOES_NOT_EXIST_FOR_PROVIDED_UID": {
                    "description": "RENEWAL_RAW_CHARGING_POINT_DOES_NOT_EXIST_FOR_PROVIDED_UID",
                    "$ref": "#/components/examples/RENEWAL_RAW_CHARGING_POINT_DOES_NOT_EXIST_FOR_PROVIDED_UID"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-stations/charging-points/rating/{uid}": {
      "put": {
        "tags": [
          "Raw Reports - Ratings"
        ],
        "summary": "Edit existing charging point raw Rating report.",
        "description": "Edit existing charging point raw Rating report.",
        "operationId": "editRatingRawReport",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargingPointEditRatingReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "RAW_RATING_REPORT_NOT_FOUND": {
                    "description": "RAW_RATING_REPORT_NOT_FOUND",
                    "$ref": "#/components/examples/RAW_RATING_REPORT_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-stations/charging-points/defects/{uid}": {
      "put": {
        "tags": [
          "Charging Points - Raw Reports - Defects"
        ],
        "summary": "Edit existing raw Charging Point Defects report.",
        "description": "Edit existing raw Charging Point Defects report.",
        "operationId": "editChargingPointDefectsRawReport",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditChargingPointDefectsRawReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE": {
                    "description": "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE",
                    "$ref": "#/components/examples/REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "RAW_CHARGING_POINT_DEFECT_UID_NUMBER_NOT_FOUND": {
                    "description": "RAW_CHARGING_POINT_DEFECT_UID_NUMBER_NOT_FOUND",
                    "$ref": "#/components/examples/RAW_CHARGING_POINT_DEFECT_UID_NUMBER_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-hub/ratings/{uid}": {
      "put": {
        "tags": [
          "Raw Reports - Ratings"
        ],
        "summary": "Edit existing charging hub raw Rating report.",
        "description": "Edit existing charging hub raw Rating report.",
        "operationId": "editAdHocTariffRawReport_1",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditRatingReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "RAW_RATING_REPORT_NOT_FOUND": {
                    "description": "RAW_RATING_REPORT_NOT_FOUND",
                    "$ref": "#/components/examples/RAW_RATING_REPORT_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-hub/facility-damages/{uid}": {
      "put": {
        "tags": [
          "Charging Hub - Raw Reports - Facility Damages"
        ],
        "summary": "Edit existing raw Facility Damages report.",
        "description": "Edit existing raw Facility Damages report.",
        "operationId": "editFacilityDamagesRawReport",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditRawFacilityDamagesReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE": {
                    "description": "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE",
                    "$ref": "#/components/examples/REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE"
                  },
                  "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FIX_DATE": {
                    "description": "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FIX_DATE",
                    "$ref": "#/components/examples/REPORT_EMERGENCE_DATE_IS_LATER_THAN_FIX_DATE"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "RAW_FACILITY_DAMAGES_UID_NUMBER_NOT_FOUND": {
                    "description": "RAW_FACILITY_DAMAGES_UID_NUMBER_NOT_FOUND",
                    "$ref": "#/components/examples/RAW_FACILITY_DAMAGES_UID_NUMBER_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-hub/ad-hoc-tariff/{uid}": {
      "put": {
        "tags": [
          "Charging Hub - Raw Reports - Ad Hoc Tariff"
        ],
        "summary": "Edit existing raw ad-hoc Tariff report.",
        "description": "Edit existing raw ad-hoc Tariff report.",
        "operationId": "editAdHocTariffRawReport_2",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditAdHocTariffReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "MONTH_ON_REPORT_NOT_VALID": {
                    "description": "MONTH_ON_REPORT_NOT_VALID",
                    "$ref": "#/components/examples/MONTH_ON_REPORT_NOT_VALID"
                  },
                  "VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM": {
                    "description": "VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM",
                    "$ref": "#/components/examples/VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM"
                  },
                  "RAW_AD_HOC_TARIFF_UID_NUMBER_NOT_FOUND": {
                    "description": "RAW_AD_HOC_TARIFF_UID_NUMBER_NOT_FOUND",
                    "$ref": "#/components/examples/RAW_AD_HOC_TARIFF_UID_NUMBER_NOT_FOUND"
                  }
                }
              }
            }
          },
          "409": {
            "description": "If a ad hoc tariff with the charging hub uid already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "AD_HOC_TARIFF_REPORT_ALREADY_EXISTS": {
                    "description": "AD_HOC_TARIFF_REPORT_ALREADY_EXISTS",
                    "$ref": "#/components/examples/AD_HOC_TARIFF_REPORT_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processed-reports/nondiscriminatory-access/{uid}": {
      "get": {
        "tags": [
          "Processed Reports - Non-Discriminatory access"
        ],
        "summary": "Get processed Non-Discriminatory Access report by uid.",
        "description": "Returns a processed Non-Discriminatory Access reports, based on the provided month.",
        "operationId": "fetchNonDiscriminatoryAccessProcessedReports",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "A string representing the unique identifiers (UID) of the Non-DiscriminatoryAccess report.",
            "required": true,
            "schema": {
              "maxLength": 36,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonDiscriminatoryAccessReportResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "NON_DISCRIMINATORY_ACCESS_REPORT_NOT_FOUND": {
                    "description": "NON_DISCRIMINATORY_ACCESS_REPORT_NOT_FOUND",
                    "$ref": "#/components/examples/NON_DISCRIMINATORY_ACCESS_REPORT_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Processed Reports - Non-Discriminatory access"
        ],
        "summary": "Edit a processed Non-Discriminatory access report.",
        "description": "Edit a processed Non-Discriminatory access report.",
        "operationId": "editProcessedNonDiscriminatoryAccessReport",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NonDiscriminatoryAccessReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "MONTH_ON_REPORT_NOT_VALID": {
                    "description": "MONTH_ON_REPORT_NOT_VALID",
                    "$ref": "#/components/examples/MONTH_ON_REPORT_NOT_VALID"
                  },
                  "PROVIDER_GROUP_DO_NOT_START_WITH_2_CAPITAL_LETTERS": {
                    "description": "PROVIDER_GROUP_DO_NOT_START_WITH_2_CAPITAL_LETTERS",
                    "$ref": "#/components/examples/PROVIDER_GROUP_DO_NOT_START_WITH_2_CAPITAL_LETTERS"
                  },
                  "VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM": {
                    "description": "VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM",
                    "$ref": "#/components/examples/VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM"
                  },
                  "PROVIDER_GROUP_CHANGED": {
                    "description": "PROVIDER_GROUP_CHANGED",
                    "$ref": "#/components/examples/PROVIDER_GROUP_CHANGED"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "NON_DISCRIMINATORY_ACCESS_REPORT_NOT_FOUND": {
                    "description": "NON_DISCRIMINATORY_ACCESS_REPORT_NOT_FOUND",
                    "$ref": "#/components/examples/NON_DISCRIMINATORY_ACCESS_REPORT_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processed-reports/hotline-ratings/{uid}": {
      "get": {
        "tags": [
          "Processed Reports - Hotline Ratings"
        ],
        "summary": "Get processed Hotline Rating report by uid.",
        "description": "Get processed Hotline Rating information by uid.",
        "operationId": "fetchProcessedRatingReport",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HotlineRatingRawResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "HOTLINE_RATING_REPORT_MONTH_NOT_FOUND": {
                    "description": "HOTLINE_RATING_REPORT_MONTH_NOT_FOUND",
                    "$ref": "#/components/examples/HOTLINE_RATING_REPORT_MONTH_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Processed Reports - Hotline Ratings"
        ],
        "summary": "Edit existing processed Hotline Rating report.",
        "description": "Replace hotline rating report for a specific month.",
        "operationId": "editAdHocTariffProcessedReport",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditHotlineRatingReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "MONTH_ON_REPORT_NOT_VALID": {
                    "description": "MONTH_ON_REPORT_NOT_VALID",
                    "$ref": "#/components/examples/MONTH_ON_REPORT_NOT_VALID"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "HOTLINE_RATING_REPORT_UID_NOT_FOUND": {
                    "description": "HOTLINE_RATING_REPORT_UID_NOT_FOUND",
                    "$ref": "#/components/examples/HOTLINE_RATING_REPORT_UID_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processed-reports/charging-stations/charging-points/renewal/{uid}": {
      "get": {
        "tags": [
          "Processed Reports - Renewal"
        ],
        "summary": "Get Charging Point processed Renewal report.",
        "description": "Get Charging Point processed Renewal report.",
        "operationId": "getChargingPointRenewalProcessedReport",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargingPointRenewalReport"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "RENEWAL_PROCESSED_CHARGING_POINT_DOES_NOT_EXIST_FOR_PROVIDED_UID": {
                    "description": "RENEWAL_PROCESSED_CHARGING_POINT_DOES_NOT_EXIST_FOR_PROVIDED_UID",
                    "$ref": "#/components/examples/RENEWAL_PROCESSED_CHARGING_POINT_DOES_NOT_EXIST_FOR_PROVIDED_UID"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Processed Reports - Renewal"
        ],
        "summary": "Edit Charging Point processed Renewal report.",
        "description": "Edit Charging Point processed Renewal report.",
        "operationId": "updateChargingPointRenewalProcessedReport",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditChargingPointRenewalReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "RENEWAL_START_TIME_NEEDS_TO_BE_BEFORE_END_TIME": {
                    "description": "RENEWAL_START_TIME_NEEDS_TO_BE_BEFORE_END_TIME",
                    "$ref": "#/components/examples/RENEWAL_START_TIME_NEEDS_TO_BE_BEFORE_END_TIME"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "RENEWAL_PROCESSED_CHARGING_POINT_DOES_NOT_EXIST_FOR_PROVIDED_UID": {
                    "description": "RENEWAL_PROCESSED_CHARGING_POINT_DOES_NOT_EXIST_FOR_PROVIDED_UID",
                    "$ref": "#/components/examples/RENEWAL_PROCESSED_CHARGING_POINT_DOES_NOT_EXIST_FOR_PROVIDED_UID"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processed-reports/charging-stations/charging-points/ratings/{uid}": {
      "get": {
        "tags": [
          "Processed Reports - Rating"
        ],
        "summary": "Get charging point processed Rating report by uid.",
        "description": "Returns the charging point processed Rating report, based on the provided rating report uid.",
        "operationId": "fetchProcessedRatingReport_1",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "The uid of the rating report of a charging point.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RatingResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "PROCESSED_RATING_REPORT_NOT_FOUND": {
                    "description": "PROCESSED_RATING_REPORT_NOT_FOUND",
                    "$ref": "#/components/examples/PROCESSED_RATING_REPORT_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Processed Reports - Rating"
        ],
        "summary": "Edit existing charging point processed Rating report.",
        "description": "Edit existing charging point processed Rating report.",
        "operationId": "editRatingProcessedReport",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargingPointEditRatingReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "PROCESSED_RATING_REPORT_NOT_FOUND": {
                    "description": "PROCESSED_RATING_REPORT_NOT_FOUND",
                    "$ref": "#/components/examples/PROCESSED_RATING_REPORT_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processed-reports/charging-stations/charging-points/defects/{uid}": {
      "get": {
        "tags": [
          "Charging stations - Processed Reports - Charging Points Defects"
        ],
        "summary": "Get processed Charging Point Defects by uid.",
        "description": "Returns processed Charging Point Defects, based on the provided uid.",
        "operationId": "fetchChargingPointDefectsProcessedReport",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargingPointDefectsProcessedReportResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "PROCESSED_CHARGING_POINT_DEFECT_UID_NUMBER_NOT_FOUND": {
                    "description": "PROCESSED_CHARGING_POINT_DEFECT_UID_NUMBER_NOT_FOUND",
                    "$ref": "#/components/examples/PROCESSED_CHARGING_POINT_DEFECT_UID_NUMBER_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Charging stations - Processed Reports - Charging Points Defects"
        ],
        "summary": "Edit existing processed Charging Point Defects report.",
        "description": "Edit existing processed Charging Point Defects report.",
        "operationId": "editChargingPointDefectsProcessedReport",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProcessedChargingPointDefectsReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE": {
                    "description": "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE",
                    "$ref": "#/components/examples/REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "PROCESSED_CHARGING_POINT_DEFECT_UID_NUMBER_NOT_FOUND": {
                    "description": "PROCESSED_CHARGING_POINT_DEFECT_UID_NUMBER_NOT_FOUND",
                    "$ref": "#/components/examples/PROCESSED_CHARGING_POINT_DEFECT_UID_NUMBER_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processed-reports/charging-hub/ratings/{uid}": {
      "get": {
        "tags": [
          "Processed Reports - Rating"
        ],
        "summary": "Get processed Rating report by charging hub id and month.",
        "description": "Returns processed Rating report, based on the provided charging hub id and month.",
        "operationId": "fetchProcessedRatingReport_2",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RatingResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "PROCESSED_RATING_UID_NOT_FOUND": {
                    "description": "PROCESSED_RATING_UID_NOT_FOUND",
                    "$ref": "#/components/examples/PROCESSED_RATING_UID_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Processed Reports - Rating"
        ],
        "summary": "Edit existing processed Rating report.",
        "description": "Edit existing processed Rating report.",
        "operationId": "editAdHocTariffProcessedReport_1",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditRatingReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "PROCESSED_RATING_UID_NOT_FOUND": {
                    "description": "PROCESSED_RATING_UID_NOT_FOUND",
                    "$ref": "#/components/examples/PROCESSED_RATING_UID_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processed-reports/charging-hub/facility-damages/{uid}": {
      "get": {
        "tags": [
          "Charging Hub Processed Reports - Facility Damages"
        ],
        "summary": "Get processed Facility Damages by uid.",
        "description": "Returns processed a Facility Damages, based on the provided uid.",
        "operationId": "fetchFacilityDamagesReport",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessedFacilityDamagesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "PROCESSED_FACILITY_DAMAGES_UID_NUMBER_NOT_FOUND": {
                    "description": "PROCESSED_FACILITY_DAMAGES_UID_NUMBER_NOT_FOUND",
                    "$ref": "#/components/examples/PROCESSED_FACILITY_DAMAGES_UID_NUMBER_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Charging Hub Processed Reports - Facility Damages"
        ],
        "summary": "Edit existing processed Facility Damages report.",
        "description": "Edit existing processed Facility Damages report.",
        "operationId": "editFacilityDamagesReport",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessedFacilityDamagesUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE": {
                    "description": "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE",
                    "$ref": "#/components/examples/REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE"
                  },
                  "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FIX_DATE": {
                    "description": "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FIX_DATE",
                    "$ref": "#/components/examples/REPORT_EMERGENCE_DATE_IS_LATER_THAN_FIX_DATE"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "PROCESSED_FACILITY_DAMAGES_UID_NUMBER_NOT_FOUND": {
                    "description": "PROCESSED_FACILITY_DAMAGES_UID_NUMBER_NOT_FOUND",
                    "$ref": "#/components/examples/PROCESSED_FACILITY_DAMAGES_UID_NUMBER_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processed-reports/charging-hub/ad-hoc-tariff/{uid}": {
      "get": {
        "tags": [
          "Charging Hub Processed Reports - Ad Hoc Tariff"
        ],
        "summary": "Get processed ad-hoc Tariff by charging hub id and month.",
        "description": "Returns processed an ad-hoc Tariff, based on the provided charging hub id and month.",
        "operationId": "fetchAdHocRawTariffReport_1",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdHocTariffResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "RAW_AD_HOC_TARIFF_NOT_FOUND": {
                    "description": "RAW_AD_HOC_TARIFF_NOT_FOUND",
                    "$ref": "#/components/examples/RAW_AD_HOC_TARIFF_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Charging Hub Processed Reports - Ad Hoc Tariff"
        ],
        "summary": "Edit existing processed ad-hoc Tariff report.",
        "description": "Edit existing processed ad-hoc Tariff report.",
        "operationId": "editAdHocTariffRawReport_3",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditAdHocTariffReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "MONTH_ON_REPORT_NOT_VALID": {
                    "description": "MONTH_ON_REPORT_NOT_VALID",
                    "$ref": "#/components/examples/MONTH_ON_REPORT_NOT_VALID"
                  },
                  "VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM": {
                    "description": "VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM",
                    "$ref": "#/components/examples/VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM"
                  },
                  "RAW_AD_HOC_TARIFF_UID_NUMBER_NOT_FOUND": {
                    "description": "RAW_AD_HOC_TARIFF_UID_NUMBER_NOT_FOUND",
                    "$ref": "#/components/examples/RAW_AD_HOC_TARIFF_UID_NUMBER_NOT_FOUND"
                  }
                }
              }
            }
          },
          "409": {
            "description": "If a ad hoc tariff with the charging hub id already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "AD_HOC_TARIFF_REPORT_ALREADY_EXISTS": {
                    "description": "AD_HOC_TARIFF_REPORT_ALREADY_EXISTS",
                    "$ref": "#/components/examples/AD_HOC_TARIFF_REPORT_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charging-stations/{identityKey}": {
      "get": {
        "tags": [
          "Charging Station"
        ],
        "summary": "Get Charging Station.",
        "description": "Get charging station details with charging points and connectors",
        "operationId": "getChargingStation",
        "parameters": [
          {
            "name": "identityKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargingStationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_STATION_WITH_IDENTITY_KEY_WAS_NOT_FOUND": {
                    "description": "CHARGING_STATION_WITH_IDENTITY_KEY_WAS_NOT_FOUND",
                    "$ref": "#/components/examples/CHARGING_STATION_WITH_IDENTITY_KEY_WAS_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Charging Station"
        ],
        "summary": "Edit a Charging Station.",
        "description": "Edits a Charging Station",
        "operationId": "updateChargingStation",
        "parameters": [
          {
            "name": "identityKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargingStationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "CANT_CHANGE_CHARGING_HUB_OF_AN_ALREADY_CREATED_STATION": {
                    "description": "CANT_CHANGE_CHARGING_HUB_OF_AN_ALREADY_CREATED_STATION",
                    "$ref": "#/components/examples/CANT_CHANGE_CHARGING_HUB_OF_AN_ALREADY_CREATED_STATION"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_STATION_WITH_IDENTITY_KEY_WAS_NOT_FOUND": {
                    "description": "CHARGING_STATION_WITH_IDENTITY_KEY_WAS_NOT_FOUND",
                    "$ref": "#/components/examples/CHARGING_STATION_WITH_IDENTITY_KEY_WAS_NOT_FOUND"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_STATION_HAS_ASSOCIATED_STATIONS": {
                    "description": "CHARGING_STATION_HAS_ASSOCIATED_STATIONS",
                    "$ref": "#/components/examples/CHARGING_STATION_HAS_ASSOCIATED_STATIONS"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Charging Station"
        ],
        "summary": "Delete charging station.",
        "description": "Deletes charging station",
        "operationId": "deleteChargingStation",
        "parameters": [
          {
            "name": "identityKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_STATION_WITH_IDENTITY_KEY_WAS_NOT_FOUND": {
                    "description": "CHARGING_STATION_WITH_IDENTITY_KEY_WAS_NOT_FOUND",
                    "$ref": "#/components/examples/CHARGING_STATION_WITH_IDENTITY_KEY_WAS_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charging-stations/{identityKey}/charging-points/{chargingPointUid}": {
      "put": {
        "tags": [
          "Charging Point"
        ],
        "summary": "Edit a charging point.",
        "description": "Edit a charging point.",
        "operationId": "updateChargingStationChargingPoint",
        "parameters": [
          {
            "name": "identityKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chargingPointUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargingPointUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "CONNECTORS_SIZE_DO_NOT_MATCH": {
                    "description": "CONNECTORS_SIZE_DO_NOT_MATCH",
                    "$ref": "#/components/examples/CONNECTORS_SIZE_DO_NOT_MATCH"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_HUB_DOES_NOT_EXIST": {
                    "description": "CHARGING_HUB_DOES_NOT_EXIST",
                    "$ref": "#/components/examples/CHARGING_HUB_DOES_NOT_EXIST"
                  },
                  "CHARGING_POINT_FOR_CHARGING_STATION_DOES_NOT_EXISTS": {
                    "description": "CHARGING_POINT_FOR_CHARGING_STATION_DOES_NOT_EXISTS",
                    "$ref": "#/components/examples/CHARGING_POINT_FOR_CHARGING_STATION_DOES_NOT_EXISTS"
                  },
                  "CHARGING_HUB_FOR_CHARGING_STATION_DOES_NOT_EXISTS": {
                    "description": "CHARGING_HUB_FOR_CHARGING_STATION_DOES_NOT_EXISTS",
                    "$ref": "#/components/examples/CHARGING_HUB_FOR_CHARGING_STATION_DOES_NOT_EXISTS"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "EVSE_ID_ALREADY_EXISTS": {
                    "description": "EVSE_ID_ALREADY_EXISTS",
                    "$ref": "#/components/examples/EVSE_ID_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Charging Point"
        ],
        "summary": "Delete charging station charging point.",
        "description": "Deletes charging station charging point",
        "operationId": "deleteChargingStationChargingPoint",
        "parameters": [
          {
            "name": "identityKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chargingPointUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_POINT_FOR_CHARGING_STATION_DOES_NOT_EXISTS": {
                    "description": "CHARGING_POINT_FOR_CHARGING_STATION_DOES_NOT_EXISTS",
                    "$ref": "#/components/examples/CHARGING_POINT_FOR_CHARGING_STATION_DOES_NOT_EXISTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charging-sessions/{chargingSessionUid}": {
      "put": {
        "tags": [
          "Charging session"
        ],
        "summary": "Update existing charging session.",
        "description": "Update existing charging session with charging periods and send it to Obelis service of the german government.",
        "operationId": "updateChargingSession",
        "parameters": [
          {
            "name": "chargingSessionUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargingSessionUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorMessageDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_SESSION_DOES_NOT_EXIST": {
                    "description": "CHARGING_SESSION_DOES_NOT_EXIST",
                    "$ref": "#/components/examples/CHARGING_SESSION_DOES_NOT_EXIST"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charging-hubs/{chargingHubUid}": {
      "get": {
        "tags": [
          "Charging Hub"
        ],
        "summary": "Retrieve charging hub information by id.",
        "description": "Retrieve charging hub information by id.",
        "operationId": "getChargingHubByUid",
        "parameters": [
          {
            "name": "chargingHubUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargingHubResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_HUB_DOES_NOT_EXIST": {
                    "description": "CHARGING_HUB_DOES_NOT_EXIST",
                    "$ref": "#/components/examples/CHARGING_HUB_DOES_NOT_EXIST"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Charging Hub"
        ],
        "summary": "Edit a charging hub.",
        "description": "Edit a  charging hub and send it to Obelis service of the german government.",
        "operationId": "updateChargingHub",
        "parameters": [
          {
            "name": "chargingHubUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargingHubUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorMessageDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_HUB_DOES_NOT_EXIST": {
                    "description": "CHARGING_HUB_DOES_NOT_EXIST",
                    "$ref": "#/components/examples/CHARGING_HUB_DOES_NOT_EXIST"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_HUB_COORDINATES_ALREADY_EXISTS": {
                    "description": "CHARGING_HUB_COORDINATES_ALREADY_EXISTS",
                    "$ref": "#/components/examples/CHARGING_HUB_COORDINATES_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Charging Hub"
        ],
        "summary": "Delete a Charging Hub.",
        "description": "Delete a Charging Hub.",
        "operationId": "deleteChargingHub",
        "parameters": [
          {
            "name": "chargingHubUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorMessageDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_HUB_DOES_NOT_EXIST": {
                    "description": "CHARGING_HUB_DOES_NOT_EXIST",
                    "$ref": "#/components/examples/CHARGING_HUB_DOES_NOT_EXIST"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_HUB_HAS_ASSOCIATED_STATIONS": {
                    "description": "CHARGING_HUB_HAS_ASSOCIATED_STATIONS",
                    "$ref": "#/components/examples/CHARGING_HUB_HAS_ASSOCIATED_STATIONS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/nondiscriminatory-access": {
      "post": {
        "tags": [
          "Raw Reports - Non-Discriminatory access"
        ],
        "summary": "Add new raw Non-Discriminatory access report.",
        "description": "Add new raw Non-Discriminatory access report.",
        "operationId": "persistRawNonDiscriminatoryAccessReport",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NonDiscriminatoryAccessReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "MONTH_ON_REPORT_NOT_VALID": {
                    "description": "MONTH_ON_REPORT_NOT_VALID",
                    "$ref": "#/components/examples/MONTH_ON_REPORT_NOT_VALID"
                  },
                  "PROVIDER_GROUP_DO_NOT_START_WITH_2_CAPITAL_LETTERS": {
                    "description": "PROVIDER_GROUP_DO_NOT_START_WITH_2_CAPITAL_LETTERS",
                    "$ref": "#/components/examples/PROVIDER_GROUP_DO_NOT_START_WITH_2_CAPITAL_LETTERS"
                  },
                  "VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM": {
                    "description": "VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM",
                    "$ref": "#/components/examples/VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "NON_DISCRIMINATORY_ACCESS_REPORT_ALREADY_EXISTS": {
                    "description": "NON_DISCRIMINATORY_ACCESS_REPORT_ALREADY_EXISTS",
                    "$ref": "#/components/examples/NON_DISCRIMINATORY_ACCESS_REPORT_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/hotline-ratings": {
      "post": {
        "tags": [
          "Raw Reports - Hotline Ratings"
        ],
        "summary": "Add new raw Hotline Rating report.",
        "description": "Perform a monthly report for the hotline rating.",
        "operationId": "persistRawHotlineRatingReport",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHotlineRatingReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "MONTH_ON_REPORT_NOT_VALID": {
                    "description": "MONTH_ON_REPORT_NOT_VALID",
                    "$ref": "#/components/examples/MONTH_ON_REPORT_NOT_VALID"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "HOTLINE_RATING_REPORT_ALREADY_EXISTS": {
                    "description": "HOTLINE_RATING_REPORT_ALREADY_EXISTS",
                    "$ref": "#/components/examples/HOTLINE_RATING_REPORT_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-stations/charging-points/renewal": {
      "post": {
        "tags": [
          "Raw Reports - Renewal"
        ],
        "summary": "Add new Charging Point raw Renewal report.",
        "description": "Add new Charging Point raw Renewal report.",
        "operationId": "persistChargingPointRenewalRawReport",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChargingPointRenewalReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargingPointRenewalReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "RENEWAL_START_TIME_NEEDS_TO_BE_BEFORE_END_TIME": {
                    "description": "RENEWAL_START_TIME_NEEDS_TO_BE_BEFORE_END_TIME",
                    "$ref": "#/components/examples/RENEWAL_START_TIME_NEEDS_TO_BE_BEFORE_END_TIME"
                  },
                  "CHARGING_POINT_DOES_NOT_EXIST": {
                    "description": "CHARGING_POINT_DOES_NOT_EXIST",
                    "$ref": "#/components/examples/CHARGING_POINT_DOES_NOT_EXIST"
                  }
                }
              }
            }
          },
          "409": {
            "description": "If a Raw renewal report with the renewal uid, charging hub uid and charging point uid already exists.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "RENEWAL_RAW_CHARGING_POINT_REPORT_ALREADY_EXISTS": {
                    "description": "RENEWAL_RAW_CHARGING_POINT_REPORT_ALREADY_EXISTS",
                    "$ref": "#/components/examples/RENEWAL_RAW_CHARGING_POINT_REPORT_ALREADY_EXISTS"
                  },
                  "CHARGING_POINT_NOT_ASSOCIATED_WITH_CHARGING_HUB": {
                    "description": "CHARGING_POINT_NOT_ASSOCIATED_WITH_CHARGING_HUB",
                    "$ref": "#/components/examples/CHARGING_POINT_NOT_ASSOCIATED_WITH_CHARGING_HUB"
                  },
                  "IDENTITY_KEY_NOT_ASSOCIATED_WITH_CHARGING_POINT": {
                    "description": "IDENTITY_KEY_NOT_ASSOCIATED_WITH_CHARGING_POINT",
                    "$ref": "#/components/examples/IDENTITY_KEY_NOT_ASSOCIATED_WITH_CHARGING_POINT"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-stations/charging-points/ratings": {
      "post": {
        "tags": [
          "Raw Reports - Ratings"
        ],
        "summary": "Add new charging point raw Rating report.",
        "description": "Add new charging point raw Rating report.",
        "operationId": "persistRawRatingReport",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChargingPointRatingReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "MONTH_ON_REPORT_NOT_VALID": {
                    "description": "MONTH_ON_REPORT_NOT_VALID",
                    "$ref": "#/components/examples/MONTH_ON_REPORT_NOT_VALID"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_POINT_DOES_NOT_EXIST": {
                    "description": "CHARGING_POINT_DOES_NOT_EXIST",
                    "$ref": "#/components/examples/CHARGING_POINT_DOES_NOT_EXIST"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "RATING_REPORT_ALREADY_EXISTS": {
                    "description": "RATING_REPORT_ALREADY_EXISTS",
                    "$ref": "#/components/examples/RATING_REPORT_ALREADY_EXISTS"
                  },
                  "CHARGING_POINT_NOT_ASSOCIATED_WITH_CHARGING_HUB": {
                    "description": "CHARGING_POINT_NOT_ASSOCIATED_WITH_CHARGING_HUB",
                    "$ref": "#/components/examples/CHARGING_POINT_NOT_ASSOCIATED_WITH_CHARGING_HUB"
                  },
                  "IDENTITY_KEY_NOT_ASSOCIATED_WITH_CHARGING_POINT": {
                    "description": "IDENTITY_KEY_NOT_ASSOCIATED_WITH_CHARGING_POINT",
                    "$ref": "#/components/examples/IDENTITY_KEY_NOT_ASSOCIATED_WITH_CHARGING_POINT"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-stations/charging-points/defects": {
      "post": {
        "tags": [
          "Charging Points - Raw Reports - Defects"
        ],
        "summary": "Add new raw Charging Point Defects report.",
        "description": "Add new raw Charging Point Defects report.",
        "operationId": "persistChargingPointDefectsRawReport",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargingPointDefectsReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorMessageDto"
                },
                "examples": {
                  "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE": {
                    "description": "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE",
                    "$ref": "#/components/examples/REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE"
                  }
                }
              }
            }
          },
          "409": {
            "description": "If a charging point Defects with this uid already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_POINT_DEFECTS_REPORT_ALREADY_EXISTS": {
                    "description": "CHARGING_POINT_DEFECTS_REPORT_ALREADY_EXISTS",
                    "$ref": "#/components/examples/CHARGING_POINT_DEFECTS_REPORT_ALREADY_EXISTS"
                  },
                  "CHARGING_POINT_NOT_ASSOCIATED_WITH_CHARGING_HUB": {
                    "description": "CHARGING_POINT_NOT_ASSOCIATED_WITH_CHARGING_HUB",
                    "$ref": "#/components/examples/CHARGING_POINT_NOT_ASSOCIATED_WITH_CHARGING_HUB"
                  },
                  "IDENTITY_KEY_NOT_ASSOCIATED_WITH_CHARGING_POINT": {
                    "description": "IDENTITY_KEY_NOT_ASSOCIATED_WITH_CHARGING_POINT",
                    "$ref": "#/components/examples/IDENTITY_KEY_NOT_ASSOCIATED_WITH_CHARGING_POINT"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-hub/ratings": {
      "post": {
        "tags": [
          "Raw Reports - Ratings"
        ],
        "summary": "Add new charging hub raw Rating report.",
        "description": "Add new charging hub raw Rating report.",
        "operationId": "persistRawRatingReport_1",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRatingReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "MONTH_ON_REPORT_NOT_VALID": {
                    "description": "MONTH_ON_REPORT_NOT_VALID",
                    "$ref": "#/components/examples/MONTH_ON_REPORT_NOT_VALID"
                  },
                  "CHARGING_HUB_DOES_NOT_EXIST": {
                    "description": "CHARGING_HUB_DOES_NOT_EXIST",
                    "$ref": "#/components/examples/CHARGING_HUB_DOES_NOT_EXIST"
                  }
                }
              }
            }
          },
          "409": {
            "description": "If a Rating report with the charging hub uid already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "RATING_REPORT_ALREADY_EXISTS": {
                    "description": "RATING_REPORT_ALREADY_EXISTS",
                    "$ref": "#/components/examples/RATING_REPORT_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-hub/facility-damages": {
      "get": {
        "tags": [
          "Charging Hub - Raw Reports - Facility Damages"
        ],
        "summary": "Get raw Facility Damages.",
        "description": "Returns raw Facility Damages.",
        "operationId": "fetchUnprocessedFacilityDamagesReport_1",
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FacilityDamagesReportResponse"
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "post": {
        "tags": [
          "Charging Hub - Raw Reports - Facility Damages"
        ],
        "summary": "Add new raw Facility Damages report.",
        "description": "Add new raw Facility Damages report.",
        "operationId": "persistFacilityDamagesRawReport",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FacilityDamagesReport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorMessageDto"
                },
                "examples": {
                  "CHARGING_HUB_DOES_NOT_EXIST": {
                    "description": "CHARGING_HUB_DOES_NOT_EXIST",
                    "$ref": "#/components/examples/CHARGING_HUB_DOES_NOT_EXIST"
                  },
                  "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE": {
                    "description": "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE",
                    "$ref": "#/components/examples/REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE"
                  },
                  "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FIX_DATE": {
                    "description": "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FIX_DATE",
                    "$ref": "#/components/examples/REPORT_EMERGENCE_DATE_IS_LATER_THAN_FIX_DATE"
                  }
                }
              }
            }
          },
          "409": {
            "description": "If a facility damages with this uid already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "FACILITY_DAMAGES_REPORT_ALREADY_EXISTS": {
                    "description": "FACILITY_DAMAGES_REPORT_ALREADY_EXISTS",
                    "$ref": "#/components/examples/FACILITY_DAMAGES_REPORT_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-hub/ad-hoc-tariff": {
      "post": {
        "tags": [
          "Charging Hub - Raw Reports - Ad Hoc Tariff"
        ],
        "summary": "Add new raw ad-hoc Tariff report.",
        "description": "Add new raw ad-hoc Tariff report.",
        "operationId": "persistAdHocTariffRawReport",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdHocTariffReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "MONTH_ON_REPORT_NOT_VALID": {
                    "description": "MONTH_ON_REPORT_NOT_VALID",
                    "$ref": "#/components/examples/MONTH_ON_REPORT_NOT_VALID"
                  },
                  "VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM": {
                    "description": "VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM",
                    "$ref": "#/components/examples/VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM"
                  }
                }
              }
            }
          },
          "409": {
            "description": "If a ad hoc tariff with the charging hub uid already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "AD_HOC_TARIFF_REPORT_ALREADY_EXISTS": {
                    "description": "AD_HOC_TARIFF_REPORT_ALREADY_EXISTS",
                    "$ref": "#/components/examples/AD_HOC_TARIFF_REPORT_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processed-reports/nondiscriminatory-access": {
      "post": {
        "tags": [
          "Processed Reports - Non-Discriminatory access"
        ],
        "summary": "Add new processed Non-Discriminatory access report.",
        "description": "Add new processed Non-Discriminatory access report.",
        "operationId": "persistProcessedNonDiscriminatoryAccessReport",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NonDiscriminatoryAccessProcessedReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "MONTH_ON_REPORT_NOT_VALID": {
                    "description": "MONTH_ON_REPORT_NOT_VALID",
                    "$ref": "#/components/examples/MONTH_ON_REPORT_NOT_VALID"
                  },
                  "PROVIDER_GROUP_DO_NOT_START_WITH_2_CAPITAL_LETTERS": {
                    "description": "PROVIDER_GROUP_DO_NOT_START_WITH_2_CAPITAL_LETTERS",
                    "$ref": "#/components/examples/PROVIDER_GROUP_DO_NOT_START_WITH_2_CAPITAL_LETTERS"
                  },
                  "VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM": {
                    "description": "VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM",
                    "$ref": "#/components/examples/VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM"
                  },
                  "PROVIDER_GROUP_CHANGED": {
                    "description": "PROVIDER_GROUP_CHANGED",
                    "$ref": "#/components/examples/PROVIDER_GROUP_CHANGED"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "NON_DISCRIMINATORY_ACCESS_REPORT_ALREADY_EXISTS": {
                    "description": "NON_DISCRIMINATORY_ACCESS_REPORT_ALREADY_EXISTS",
                    "$ref": "#/components/examples/NON_DISCRIMINATORY_ACCESS_REPORT_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processed-reports/hotline-ratings": {
      "post": {
        "tags": [
          "Processed Reports - Hotline Ratings"
        ],
        "summary": "Add new processed Hotline Rating report.",
        "description": "Perform a monthly report for the hotline rating.",
        "operationId": "persistProcessedHotlineRatingReport",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHotlineRatingReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "MONTH_ON_REPORT_NOT_VALID": {
                    "description": "MONTH_ON_REPORT_NOT_VALID",
                    "$ref": "#/components/examples/MONTH_ON_REPORT_NOT_VALID"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "HOTLINE_RATING_REPORT_ALREADY_EXISTS": {
                    "description": "HOTLINE_RATING_REPORT_ALREADY_EXISTS",
                    "$ref": "#/components/examples/HOTLINE_RATING_REPORT_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processed-reports/charging-stations/charging-points/renewal": {
      "post": {
        "tags": [
          "Processed Reports - Renewal"
        ],
        "summary": "Add new Charging Point processed Renewal report.",
        "description": "Add new Charging Point processed Renewal report.",
        "operationId": "persistChargingPointRenewalProcessedReport",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargingPointRenewalReport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "RENEWAL_START_TIME_NEEDS_TO_BE_BEFORE_END_TIME": {
                    "description": "RENEWAL_START_TIME_NEEDS_TO_BE_BEFORE_END_TIME",
                    "$ref": "#/components/examples/RENEWAL_START_TIME_NEEDS_TO_BE_BEFORE_END_TIME"
                  }
                }
              }
            }
          },
          "409": {
            "description": "If a processed renewal report with uid already exists ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "RENEWAL_PROCESSED_CHARGING_POINT_REPORT_ALREADY_EXISTS": {
                    "description": "RENEWAL_PROCESSED_CHARGING_POINT_REPORT_ALREADY_EXISTS",
                    "$ref": "#/components/examples/RENEWAL_PROCESSED_CHARGING_POINT_REPORT_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processed-reports/charging-stations/charging-points/ratings": {
      "post": {
        "tags": [
          "Processed Reports - Rating"
        ],
        "summary": "Add new processed Rating report.",
        "description": "Creates a new processed Rating report.",
        "operationId": "persistProcessedRatingReport",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChargingPointRatingReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "MONTH_ON_REPORT_NOT_VALID": {
                    "description": "MONTH_ON_REPORT_NOT_VALID",
                    "$ref": "#/components/examples/MONTH_ON_REPORT_NOT_VALID"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_POINT_DOES_NOT_EXIST": {
                    "description": "CHARGING_POINT_DOES_NOT_EXIST",
                    "$ref": "#/components/examples/CHARGING_POINT_DOES_NOT_EXIST"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "RATING_REPORT_ALREADY_EXISTS": {
                    "description": "RATING_REPORT_ALREADY_EXISTS",
                    "$ref": "#/components/examples/RATING_REPORT_ALREADY_EXISTS"
                  },
                  "CHARGING_POINT_NOT_ASSOCIATED_WITH_CHARGING_HUB": {
                    "description": "CHARGING_POINT_NOT_ASSOCIATED_WITH_CHARGING_HUB",
                    "$ref": "#/components/examples/CHARGING_POINT_NOT_ASSOCIATED_WITH_CHARGING_HUB"
                  },
                  "IDENTITY_KEY_NOT_ASSOCIATED_WITH_CHARGING_POINT": {
                    "description": "IDENTITY_KEY_NOT_ASSOCIATED_WITH_CHARGING_POINT",
                    "$ref": "#/components/examples/IDENTITY_KEY_NOT_ASSOCIATED_WITH_CHARGING_POINT"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processed-reports/charging-stations/charging-points/defects": {
      "post": {
        "tags": [
          "Charging stations - Processed Reports - Charging Points Defects"
        ],
        "summary": "Add new processed Charging Point Defects report.",
        "description": "Add new processed Charging Point Defects report.",
        "operationId": "persistChargingPointDefectsProcessedReport",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargingPointDefectsReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorMessageDto"
                },
                "examples": {
                  "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE": {
                    "description": "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE",
                    "$ref": "#/components/examples/REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE"
                  }
                }
              }
            }
          },
          "409": {
            "description": "If a charging point Defects with this uid already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_POINT_DEFECTS_REPORT_ALREADY_EXISTS": {
                    "description": "CHARGING_POINT_DEFECTS_REPORT_ALREADY_EXISTS",
                    "$ref": "#/components/examples/CHARGING_POINT_DEFECTS_REPORT_ALREADY_EXISTS"
                  },
                  "CHARGING_POINT_NOT_ASSOCIATED_WITH_CHARGING_HUB": {
                    "description": "CHARGING_POINT_NOT_ASSOCIATED_WITH_CHARGING_HUB",
                    "$ref": "#/components/examples/CHARGING_POINT_NOT_ASSOCIATED_WITH_CHARGING_HUB"
                  },
                  "IDENTITY_KEY_NOT_ASSOCIATED_WITH_CHARGING_POINT": {
                    "description": "IDENTITY_KEY_NOT_ASSOCIATED_WITH_CHARGING_POINT",
                    "$ref": "#/components/examples/IDENTITY_KEY_NOT_ASSOCIATED_WITH_CHARGING_POINT"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processed-reports/charging-hub/ratings": {
      "post": {
        "tags": [
          "Processed Reports - Rating"
        ],
        "summary": "Add new processed Rating report.",
        "description": "Add new processed Rating report.",
        "operationId": "persistRatingProcessedReport",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRatingReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "MONTH_ON_REPORT_NOT_VALID": {
                    "description": "MONTH_ON_REPORT_NOT_VALID",
                    "$ref": "#/components/examples/MONTH_ON_REPORT_NOT_VALID"
                  }
                }
              }
            }
          },
          "409": {
            "description": "If a Rating report with the charging hub uid already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "RATING_REPORT_ALREADY_EXISTS": {
                    "description": "RATING_REPORT_ALREADY_EXISTS",
                    "$ref": "#/components/examples/RATING_REPORT_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processed-reports/charging-hub/facility-damages": {
      "post": {
        "tags": [
          "Charging Hub Processed Reports - Facility Damages"
        ],
        "summary": "Add new processed Facility Damages report.",
        "description": "Add new processed Facility Damages report.",
        "operationId": "persistFacilityDamagesProcessedReport",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FacilityDamagesCreateReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE": {
                    "description": "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE",
                    "$ref": "#/components/examples/REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE"
                  },
                  "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FIX_DATE": {
                    "description": "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FIX_DATE",
                    "$ref": "#/components/examples/REPORT_EMERGENCE_DATE_IS_LATER_THAN_FIX_DATE"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_HUB_DOES_NOT_EXIST": {
                    "description": "CHARGING_HUB_DOES_NOT_EXIST",
                    "$ref": "#/components/examples/CHARGING_HUB_DOES_NOT_EXIST"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processed-reports/charging-hub/ad-hoc-tariff": {
      "post": {
        "tags": [
          "Charging Hub Processed Reports - Ad Hoc Tariff"
        ],
        "summary": "Add new processed ad-hoc Tariff report.",
        "description": "Add new processed ad-hoc Tariff report.",
        "operationId": "persistAdHocTariffRawReport_1",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdHocTariffReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "MONTH_ON_REPORT_NOT_VALID": {
                    "description": "MONTH_ON_REPORT_NOT_VALID",
                    "$ref": "#/components/examples/MONTH_ON_REPORT_NOT_VALID"
                  },
                  "VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM": {
                    "description": "VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM",
                    "$ref": "#/components/examples/VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM"
                  }
                }
              }
            }
          },
          "409": {
            "description": "If a ad hoc tariff with the charging hub uid already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "AD_HOC_TARIFF_REPORT_ALREADY_EXISTS": {
                    "description": "AD_HOC_TARIFF_REPORT_ALREADY_EXISTS",
                    "$ref": "#/components/examples/AD_HOC_TARIFF_REPORT_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charging-stations": {
      "post": {
        "tags": [
          "Charging Station"
        ],
        "summary": "Add new charging station.",
        "description": "Add new charging station and send it to Obelis service of the german government.",
        "operationId": "persistChargingStation",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargingStationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "CHARGING_HUB_DOES_NOT_EXIST": {
                    "description": "CHARGING_HUB_DOES_NOT_EXIST",
                    "$ref": "#/components/examples/CHARGING_HUB_DOES_NOT_EXIST"
                  }
                }
              }
            }
          },
          "409": {
            "description": "If a charging station or charging point with the same identity key or evse id already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_STATION_IDENTITY_KEY_ALREADY_EXISTS": {
                    "description": "CHARGING_STATION_IDENTITY_KEY_ALREADY_EXISTS",
                    "$ref": "#/components/examples/CHARGING_STATION_IDENTITY_KEY_ALREADY_EXISTS"
                  },
                  "EVSE_ID_ALREADY_EXISTS": {
                    "description": "EVSE_ID_ALREADY_EXISTS",
                    "$ref": "#/components/examples/EVSE_ID_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charging-stations/{identityKey}/charging-points": {
      "post": {
        "tags": [
          "Charging Point"
        ],
        "summary": "Create a charging point.",
        "description": "Create a charging point for a charging station.",
        "operationId": "persistChargingStationChargingPoint",
        "parameters": [
          {
            "name": "identityKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargingPointRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_STATION_WITH_IDENTITY_KEY_WAS_NOT_FOUND": {
                    "description": "CHARGING_STATION_WITH_IDENTITY_KEY_WAS_NOT_FOUND",
                    "$ref": "#/components/examples/CHARGING_STATION_WITH_IDENTITY_KEY_WAS_NOT_FOUND"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "EVSE_ID_ALREADY_EXISTS": {
                    "description": "EVSE_ID_ALREADY_EXISTS",
                    "$ref": "#/components/examples/EVSE_ID_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charging-sessions": {
      "post": {
        "tags": [
          "Charging session"
        ],
        "summary": "Add new charging session.",
        "description": "Add new charging session with charging periods and send it to Obelis service of the german government.",
        "operationId": "persistChargingSession",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargingSessionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorMessageDto"
                }
              }
            }
          },
          "409": {
            "description": "If a charging session with the same uid already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_SESSION_UID_ALREADY_EXISTS": {
                    "description": "CHARGING_SESSION_UID_ALREADY_EXISTS",
                    "$ref": "#/components/examples/CHARGING_SESSION_UID_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charging-hubs": {
      "post": {
        "tags": [
          "Charging Hub"
        ],
        "summary": "Add new charging hub.",
        "description": "Add new charging hub and send it to Obelis service of the german government.",
        "operationId": "persistChargingHub",
        "parameters": [
          {
            "name": "userIdentity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargingHubRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorMessageDto"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_HUB_UID_ALREADY_EXISTS": {
                    "description": "CHARGING_HUB_UID_ALREADY_EXISTS",
                    "$ref": "#/components/examples/CHARGING_HUB_UID_ALREADY_EXISTS"
                  },
                  "CHARGING_HUB_COORDINATES_ALREADY_EXISTS": {
                    "description": "CHARGING_HUB_COORDINATES_ALREADY_EXISTS",
                    "$ref": "#/components/examples/CHARGING_HUB_COORDINATES_ALREADY_EXISTS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/nondiscriminatory-access/{monthYear}": {
      "get": {
        "tags": [
          "Raw Reports - Non-Discriminatory access"
        ],
        "summary": "Get raw Non-Discriminatory Access report by month.",
        "description": "Returns a list of raw Non-Discriminatory Access reports, based on the provided month.",
        "operationId": "fetchNonDiscriminatoryAccessRawReports",
        "parameters": [
          {
            "name": "monthYear",
            "in": "path",
            "description": "A string representing the month and year in the format MM-yyyy.",
            "required": true,
            "schema": {
              "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NonDiscriminatoryAccessReportResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/hotline-ratings/{monthYear}": {
      "get": {
        "tags": [
          "Raw Reports - Hotline Ratings"
        ],
        "summary": "Get raw Hotline Rating report by month.",
        "description": "Get raw Hotline Rating information by month.",
        "operationId": "fetchRawRatingReport",
        "parameters": [
          {
            "name": "monthYear",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HotlineRatingRawResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "HOTLINE_RATING_REPORT_MONTH_NOT_FOUND": {
                    "description": "HOTLINE_RATING_REPORT_MONTH_NOT_FOUND",
                    "$ref": "#/components/examples/HOTLINE_RATING_REPORT_MONTH_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-stations/{identityKey}/charging-points/renewal": {
      "get": {
        "tags": [
          "Raw Reports - Renewal"
        ],
        "summary": "Get not processed Charging Point Renewal raw reports for Charging Station.",
        "description": "Get not processed Charging Point Renewal raw reports for Charging Station.",
        "operationId": "getRenewalRawReportsForChargingStation",
        "parameters": [
          {
            "name": "identityKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargingPointRenewalReportExtendedResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_STATION_WITH_IDENTITY_KEY_DOES_NOT_EXIST": {
                    "description": "CHARGING_STATION_WITH_IDENTITY_KEY_DOES_NOT_EXIST",
                    "$ref": "#/components/examples/CHARGING_STATION_WITH_IDENTITY_KEY_DOES_NOT_EXIST"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-stations/{identityKey}/charging-points/ratings/{monthYear}": {
      "get": {
        "tags": [
          "Raw Reports - Ratings"
        ],
        "summary": "Get charging point raw Rating report by charging hub id and month.",
        "description": "Returns the charging point raw Rating report, based on the provided identity key and month.",
        "operationId": "fetchRawRatingReport_1",
        "parameters": [
          {
            "name": "identityKey",
            "in": "path",
            "description": "The unique identifier of the charging station.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "monthYear",
            "in": "path",
            "description": "A string representing the month and year in the format MM-yyyy.",
            "required": true,
            "schema": {
              "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargingPointRatingResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "RAW_RATING_REPORT_FOR_IDENTITY_KEY_KEY_AND_MONTH_YEAR_NOT_FOUND": {
                    "description": "RAW_RATING_REPORT_FOR_IDENTITY_KEY_KEY_AND_MONTH_YEAR_NOT_FOUND",
                    "$ref": "#/components/examples/RAW_RATING_REPORT_FOR_IDENTITY_KEY_KEY_AND_MONTH_YEAR_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-stations/{identityKey}/charging-points/defects": {
      "get": {
        "tags": [
          "Charging Points - Raw Reports - Defects"
        ],
        "summary": "Get raw Charging Point Defects.",
        "description": "Returns raw Charging Point Defects.",
        "operationId": "fetchUnprocessedChargingPointDefectsReport",
        "parameters": [
          {
            "name": "identityKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargingPointDefectsRawReportResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "CHARGING_STATION_WITH_IDENTITY_KEY_WAS_NOT_FOUND": {
                    "description": "CHARGING_STATION_WITH_IDENTITY_KEY_WAS_NOT_FOUND",
                    "$ref": "#/components/examples/CHARGING_STATION_WITH_IDENTITY_KEY_WAS_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-hub/{chargingHubUid}/ratings/{monthYear}": {
      "get": {
        "tags": [
          "Raw Reports - Ratings"
        ],
        "summary": "Get charging hub raw Rating report by charging hub uid and month.",
        "description": "Returns charging hub raw Rating report, based on the provided charging hub uid and month.",
        "operationId": "fetchRawRatingReport_2",
        "parameters": [
          {
            "name": "chargingHubUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "monthYear",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RatingResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessageDto"
                },
                "examples": {
                  "RAW_RATING_REPORT_NOT_FOUND": {
                    "description": "RAW_RATING_REPORT_NOT_FOUND",
                    "$ref": "#/components/examples/RAW_RATING_REPORT_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-hub/{chargingHubUid}/facility-damages": {
      "get": {
        "tags": [
          "Charging Hub - Raw Reports - Facility Damages"
        ],
        "summary": "Get raw Facility Damages.",
        "description": "Returns raw Facility Damages.",
        "operationId": "fetchUnprocessedFacilityDamagesReport",
        "parameters": [
          {
            "name": "chargingHubUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacilityDamagesReportResponse"
                }
              }
            }
          }
        }
      }
    },
    "/raw-reports/charging-hub/{chargingHubUid}/ad-hoc-tariff/{monthYear}": {
      "get": {
        "tags": [
          "Charging Hub - Raw Reports - Ad Hoc Tariff"
        ],
        "summary": "Get raw ad-hoc Tariff by charging hub uid and month.",
        "description": "Returns raw an ad-hoc Tariff, based on the provided charging hub uid and month.",
        "operationId": "fetchAdHocRawTariffReport",
        "parameters": [
          {
            "name": "chargingHubUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "monthYear",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdHocTariffResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ValidationErrorMessageDto"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorMessageDto"
                    }
                  ]
                },
                "examples": {
                  "RAW_AD_HOC_TARIFF_NOT_FOUND": {
                    "description": "RAW_AD_HOC_TARIFF_NOT_FOUND",
                    "$ref": "#/components/examples/RAW_AD_HOC_TARIFF_NOT_FOUND"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processed-reports/month/{monthYear}": {
      "get": {
        "tags": [
          "Global Processed Reports"
        ],
        "summary": "Fetch Global Processed Reports by Month",
        "description": "Retrieves a list of processed reports for the specified month. The monthYear should be in the format MM-YYYY.\nThis endpoint allows clients to access historical processing data for a specific month.\n",
        "operationId": "fetchProcessedReports",
        "parameters": [
          {
            "name": "monthYear",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GlobalProcessedReportResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charging-stations/{identityKey}/processed-reports/month/{monthYear}": {
      "get": {
        "tags": [
          "Charging Station Reports"
        ],
        "summary": "Fetch Processed Reports by Month",
        "description": "Retrieves a list of processed reports for the specified charging station and month. The monthYear should be in the format MM-YYYY.\nThis endpoint allows clients to access historical processing data for a specific charging station.\n",
        "operationId": "fetchProcessedReports_1",
        "parameters": [
          {
            "name": "identityKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "monthYear",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargingPointProcessedReportResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charging-stations/search": {
      "get": {
        "tags": [
          "Charging Station"
        ],
        "summary": "Get Charging Stations paginated based on criteria filters.",
        "description": " Searches for Charging Stations based on provided criteria.\n #### If a criteria filter is not provided, it will not be used in the search.\n #### If multiple criteria filters are provided, the search will only return results that match any of the provided criteria.\n #### Results are paginated based on the provided page number and page size.\n #### The page number is zero-based, meaning the first page is 0. The page size determines how many records are returned per page.\n",
        "operationId": "getChargingStationsByCriteriaFiltersPaginated",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "searchValue",
            "in": "query",
            "description": "The value which we need to search for charging station name or evseId of a charging point",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chargingHubUid",
            "in": "query",
            "description": "Charging Hub Uid which the charging station is associated",
            "required": false,
            "schema": {
              "maxLength": 36,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargingStationPaginatedResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorMessageDto"
                }
              }
            }
          }
        }
      }
    },
    "/charging-sessions/search": {
      "get": {
        "tags": [
          "Charging session"
        ],
        "summary": "Get Charging Sessions paginated based on criteria filters.",
        "description": " Searches for charging sessions based on provided criteria.\n #### If a criteria filter is not provided, it will not be used in the search.\n #### If multiple criteria filters are provided, the search will only return results that match any of the provided criteria.\n #### Results are paginated based on the provided page number and page size.\n #### The page number is zero-based, meaning the first page is 0. The page size determines how many records are returned per page.\n",
        "operationId": "getChargingSessionsByCriteriaFiltersPaginated",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "searchValue",
            "in": "query",
            "description": "The value to search for charging session id or EmaId",
            "required": false,
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "description": "A list of all charging periods of this charging session.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "EMERGENCY_STOP",
                "EV_DISCONNECTED",
                "HARDRESET",
                "LOCAL",
                "OTHER",
                "POWERLOSS",
                "REBOOT",
                "REMOTE",
                "SOFT_RESET",
                "UNLOCK_COMMAND",
                "DEAUTHORIZED"
              ]
            }
          },
          {
            "name": "tariffType",
            "in": "query",
            "description": "Reason (OCPP) for ending the charging session.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ADD_HOC_PAYMENT",
                "PROFILE_CHEAP",
                "PROFILE_FAST",
                "PROFILE_GREEN",
                "REGULAR",
                "NON_BILLABLE"
              ]
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "The Date/Time when this charging sessions starts, in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "The Date/Time when this charging sessions ends, in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "identityKey",
            "in": "query",
            "description": "Charging Station identifier.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargingSessionResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorMessageDto"
                }
              }
            }
          }
        }
      }
    },
    "/charging-hubs/{chargingHubUid}/processed-reports/month/{monthYear}": {
      "get": {
        "tags": [
          "Charging Hub Reports"
        ],
        "summary": "Fetch Processed Reports by Month",
        "description": "Retrieves a list of processed reports for the specified charging hub and month. The monthYear should be in the format MM-YYYY.\nThis endpoint allows clients to access historical processing data for a specific charging hub.\n",
        "operationId": "fetchProcessedReports_2",
        "parameters": [
          {
            "name": "chargingHubUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "monthYear",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargingHubProcessedReportResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/charging-hubs/{chargingHubUid}/charging-stations": {
      "get": {
        "tags": [
          "Charging Hub"
        ],
        "summary": "Get paginated Charging Stations associated to a specific ChargingHub.",
        "description": "Retrieves Charging Stations associated to a specific ChargingHub.",
        "operationId": "getChargingStationsByChargingHubIdPaginated",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "chargingHubUid",
            "in": "path",
            "description": "Existent Charging Hub ID provided by CPO and used to mapping with internal id.",
            "required": true,
            "schema": {
              "maxLength": 45,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargingStationPaginatedResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorMessageDto"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/charging-hubs/search": {
      "get": {
        "tags": [
          "Charging Hub"
        ],
        "summary": "Get Charging Hubs paginated based on criteria filters.",
        "description": " Searches for charging hubs based on provided criteria.\n #### If a criteria filter is not provided, it will not be used in the search.\n #### If multiple criteria filters are provided, the search will only return results that match any of the provided criteria.\n #### Results are paginated based on the provided page number and page size.\n #### The page number is zero-based, meaning the first page is 0. The page size determines how many records are returned per page.\n",
        "operationId": "getChargingHubsByCriteriaFiltersPaginated",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "searchValue",
            "in": "query",
            "description": "The search value for searching for charging hub id, name or address",
            "required": false,
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargingHubPaginatedResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorMessageDto"
                }
              }
            }
          }
        }
      }
    },
    "/charging-hubs/overview": {
      "get": {
        "tags": [
          "Charging Hub"
        ],
        "summary": "Get Charging Hubs overview.",
        "description": "Returns list of charging hubs with name and uid.",
        "operationId": "getChargingHubsOverview",
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargingHubShortResponse"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ValidationError": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "Affected field"
          },
          "message": {
            "type": "string",
            "description": "Validation message"
          }
        },
        "description": "List of validation errors"
      },
      "ValidationErrorMessageDto": {
        "required": [
          "errorCode",
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Example error message"
          },
          "errorCode": {
            "type": "string",
            "description": "The error code",
            "example": "EXAMPLE_ERROR_CODE"
          },
          "validationErrors": {
            "type": "array",
            "description": "List of validation errors",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "ErrorMessageDto": {
        "required": [
          "errorCode",
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Example error message"
          },
          "errorCode": {
            "type": "string",
            "description": "The error code",
            "example": "EXAMPLE_ERROR_CODE"
          }
        }
      },
      "AdditionalCost": {
        "required": [
          "cost",
          "description"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description for the additional fee/cost.",
            "example": "Parking fee in ct per hour [h]."
          },
          "cost": {
            "minimum": 0,
            "type": "integer",
            "description": "Additional net fee/ net cost (without VAT) value in described unit.",
            "format": "int32",
            "example": 12
          }
        },
        "description": "Additional fees/costs."
      },
      "NonDiscriminatoryAccessReportRequest": {
        "required": [
          "contractualBasis",
          "cost",
          "monthYear",
          "providerGroup",
          "validFrom",
          "validTo"
        ],
        "type": "object",
        "properties": {
          "monthYear": {
            "maxLength": 7,
            "minLength": 0,
            "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
            "type": "string",
            "description": "The reported month formatted as 'MM-yyyy'.",
            "example": "09-2024"
          },
          "providerGroup": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "Unique BDEW code of the provider group in question. 5 uppercase characters long, starting with 2 letters.",
            "example": "DEVFL"
          },
          "cost": {
            "minimum": 0,
            "type": "integer",
            "description": "net cost (without VAT) in cents [ct] per kilowatt hour [kWh].",
            "format": "int32"
          },
          "additionalCosts": {
            "type": "array",
            "description": "Optional set of additional fees/costs.",
            "items": {
              "$ref": "#/components/schemas/AdditionalCost"
            }
          },
          "validFrom": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SSZ' formatted UTC datetime for when the charge access started being valid.",
            "example": "2024-11-15T23:59:59Z"
          },
          "validTo": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SSZ' formatted UTC datetime for when the charge access expired.",
            "example": "2024-11-15T23:59:59Z"
          },
          "contractualBasis": {
            "type": "string",
            "description": "Enum that represents the contractual basis for charge access at a charging hub.",
            "example": "ROAMING_CONTRACT"
          },
          "reasoningDifferentCosts": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Reason why the provider group has a different fee than all others.",
            "example": "Some reason."
          }
        },
        "description": "Reporting the raw Non-Discriminatory access."
      },
      "EditHotlineRatingReportRequest": {
        "required": [
          "averageSpeedOfAnswer",
          "firstCallResolutionRate",
          "hotlineCalls",
          "monthYear",
          "rating"
        ],
        "type": "object",
        "properties": {
          "monthYear": {
            "maxLength": 7,
            "minLength": 0,
            "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
            "type": "string",
            "description": "The reported month formatted as 'MM-yyyy'.",
            "example": "09-2024"
          },
          "hotlineCalls": {
            "minimum": 0,
            "type": "integer",
            "description": "Amount of hotline calls.",
            "format": "int32"
          },
          "firstCallResolutionRate": {
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "description": "First call resolution rate."
          },
          "averageSpeedOfAnswer": {
            "minimum": 0,
            "type": "number",
            "description": "Average speed of answer in seconds [s]."
          },
          "rating": {
            "maximum": 6,
            "minimum": 1,
            "type": "integer",
            "description": "Average customer charging hub rating in german school grades (1 = best, 6 = worst).",
            "format": "int32"
          }
        },
        "description": "Reporting the raw Rating at a charging hub."
      },
      "EditChargingPointRenewalReportRequest": {
        "required": [
          "end",
          "renewedComponents",
          "start"
        ],
        "type": "object",
        "properties": {
          "renewedComponents": {
            "type": "array",
            "description": "Set of renewed charging point components. At least one element must be provided.",
            "items": {
              "$ref": "#/components/schemas/RenewedComponent"
            }
          },
          "start": {
            "type": "string",
            "description": "The Date/Time when  the renewal work has started/will start. In UTC",
            "example": "2024-11-15T23:59:59"
          },
          "end": {
            "type": "string",
            "description": "The Date/Time when the renewal work was finished/is scheduled to finish. In UTC",
            "example": "2024-11-15T23:59:59"
          }
        },
        "description": "Reporting the raw renewal at a charging point."
      },
      "RenewedComponent": {
        "required": [
          "chargePointComponent",
          "reason"
        ],
        "type": "object",
        "properties": {
          "chargePointComponent": {
            "type": "string",
            "description": "Enum that represents a component of an charging point.",
            "example": "CABLE_COOLING_UNIT",
            "enum": [
              "CABLE_COOLING_UNIT",
              "NETWORKING_ELECTRONICS",
              "POWER_MODULE",
              "PAYMENT_DEVICE",
              "VEHICLE_COMMUNICATION_UNIT",
              "BACKEND_COMMUNICATION_UNIT",
              "DISPLAY",
              "DC_METER",
              "AIR_FILTER",
              "OTHERS"
            ]
          },
          "reason": {
            "type": "string",
            "description": "Enum that represents a reason for the renewal of the component.",
            "example": "DAMAGE",
            "enum": [
              "DAMAGE",
              "HARDWARE_FAULT",
              "SOFTWARE_FAULT",
              "RETROFITTING",
              "OTHERS"
            ]
          }
        },
        "description": "JSON-formatted object that represents renewed component of a charging point."
      },
      "ChargingPointEditRatingReportRequest": {
        "required": [
          "monthYear",
          "rating"
        ],
        "type": "object",
        "properties": {
          "monthYear": {
            "maxLength": 7,
            "minLength": 0,
            "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
            "type": "string",
            "description": "The reported month formatted as 'MM-yyyy'.",
            "example": "09-2024"
          },
          "rating": {
            "maximum": 6,
            "minimum": 1,
            "type": "integer",
            "description": "Average customer charging hub rating in german school grades (1 = best, 6 = worst)",
            "format": "int32"
          },
          "totalComplaints": {
            "minimum": 0,
            "type": "integer",
            "description": "The amount of the received complaints for charging sessions at the charging point in question.",
            "format": "int32"
          }
        },
        "description": "Reporting the Rating at a charging hub or charging point."
      },
      "EditChargingPointDefectsRawReportRequest": {
        "required": [
          "activities",
          "chargingHubUid",
          "chargingPointUid",
          "emergenceDate",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Charging Hub UID.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingPointUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Charging Point UID.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "type": {
            "type": "string",
            "description": "Enum that represents the type of error/defect that occurred at a charging point.",
            "example": "SOFTWARE_FAULT",
            "enum": [
              "DAMAGE",
              "HARDWARE_FAULT",
              "SOFTWARE_FAULT",
              "NETWORK_FAILURE",
              "POWER_FAILURE",
              "ROUTE_CLOSURE",
              "SITE_CLOSURE",
              "OTHER"
            ]
          },
          "status": {
            "type": "string",
            "description": "Enum that represents the status of a charge point defect that occurred at a charging point.",
            "example": "TECHNICIAN_INFORMED",
            "enum": [
              "TECHNICIAN_INFORMED",
              "TECHNICIAN_ON_THE_WAY",
              "ERROR_SOLVED"
            ]
          },
          "activities": {
            "type": "string",
            "description": "Necessary activities for fixing the error.",
            "example": "REMOTE_ACCESS",
            "enum": [
              "REMOTE_ACCESS",
              "ON_SITE"
            ]
          },
          "additionalInformation": {
            "type": "string",
            "description": "Enum that represents the type of error/defect that occurred at a charging point.",
            "example": "RENEWAL_NECESSARY",
            "enum": [
              "DANGEROUS_MALFUNCTION",
              "USAGE_IMPOSSIBLE",
              "RENEWAL_NECESSARY"
            ]
          },
          "emergenceDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage emerged.",
            "example": "2024-11-15T23:59:59Z"
          },
          "forecastDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage should be repaired.",
            "example": "2024-11-15T23:59:59Z"
          },
          "fixDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage was repaired.",
            "example": "2024-11-15T23:59:59Z"
          }
        },
        "description": "Reporting the charging point defects raw."
      },
      "EditRatingReportRequest": {
        "required": [
          "monthYear",
          "rating"
        ],
        "type": "object",
        "properties": {
          "rating": {
            "maximum": 6,
            "minimum": 1,
            "type": "integer",
            "description": "Average customer charging hub rating in german school grades (1 = best, 6 = worst)",
            "format": "int32"
          },
          "monthYear": {
            "maxLength": 7,
            "minLength": 0,
            "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
            "type": "string",
            "description": "The reported month formatted as 'MM-yyyy'.",
            "example": "09-2024"
          }
        },
        "description": "Reporting the raw Rating at a charging hub."
      },
      "EditRawFacilityDamagesReportRequest": {
        "required": [
          "chargingHubUid",
          "emergenceDate"
        ],
        "type": "object",
        "properties": {
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Existent Charging Hub UID provided by CPO and used to mapping with internal uid.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "facilityType": {
            "type": "string",
            "description": "Enum that represents a auxiliary facility that is available at a charging hub.",
            "example": "VEHICLE_SUPPLIES_WINDSHIELD_WIPER_SYSTEM",
            "enum": [
              "ROOF",
              "FOOD_SERVICE",
              "SEATING",
              "SANITATION",
              "VEHICLE_SUPPLIES_AIR_PRESSURE",
              "VEHICLE_SUPPLIES_WINDSHIELD_WIPER_SYSTEM",
              "VEHICLE_SUPPLIES_VACUUM_CLEANER",
              "GREEN_ROOF",
              "PHOTOVOLTAIC_SYSTEM",
              "LIGHTING"
            ]
          },
          "emergenceDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage emerged.",
            "example": "2024-11-15T23:59:59Z"
          },
          "fixDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage was repaired.",
            "example": "2024-11-15T23:59:59Z"
          },
          "forecastDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage should be repaired.",
            "example": "2024-11-15T23:59:59Z"
          }
        },
        "description": "Reporting the raw facility damages at a charging hub."
      },
      "EditAdHocTariffReportRequest": {
        "required": [
          "monthYear",
          "validFrom",
          "validTo"
        ],
        "type": "object",
        "properties": {
          "monthYear": {
            "maxLength": 7,
            "minLength": 0,
            "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
            "type": "string",
            "description": "The reported month formatted as 'MM-yyyy'.",
            "example": "09-2024"
          },
          "cost": {
            "minimum": 0,
            "type": "integer",
            "description": "Net cost (without VAT) in cents [ct] per kilowatt hour [kWh].",
            "format": "int32"
          },
          "additionalCosts": {
            "type": "array",
            "description": "Optional set of additional fees/costs.",
            "items": {
              "$ref": "#/components/schemas/AdditionalCost"
            }
          },
          "validFrom": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SSZ' formatted UTC datetime for when the charge access started being valid.",
            "example": "2024-11-15T23:59:59Z"
          },
          "validTo": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SSZ' formatted UTC datetime for when the charge access expired.",
            "example": "2024-11-15T23:59:59Z"
          }
        },
        "description": "Reporting the raw ad-hoc-tariff at a charging hub."
      },
      "EditProcessedChargingPointDefectsReportRequest": {
        "required": [
          "activities",
          "emergenceDate",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Enum that represents the type of error/defect that occurred at a charging point.",
            "example": "SOFTWARE_FAULT",
            "enum": [
              "DAMAGE",
              "HARDWARE_FAULT",
              "SOFTWARE_FAULT",
              "NETWORK_FAILURE",
              "POWER_FAILURE",
              "ROUTE_CLOSURE",
              "SITE_CLOSURE",
              "OTHER"
            ]
          },
          "status": {
            "type": "string",
            "description": "Enum that represents the status of a charge point defect that occurred at a charging point.",
            "example": "TECHNICIAN_INFORMED",
            "enum": [
              "TECHNICIAN_INFORMED",
              "TECHNICIAN_ON_THE_WAY",
              "ERROR_SOLVED"
            ]
          },
          "activities": {
            "type": "string",
            "description": "Necessary activities for fixing the error.",
            "example": "REMOTE_ACCESS",
            "enum": [
              "REMOTE_ACCESS",
              "ON_SITE"
            ]
          },
          "additionalInformation": {
            "type": "string",
            "description": "Enum that represents the type of error/defect that occurred at a charging point.",
            "example": "RENEWAL_NECESSARY",
            "enum": [
              "DANGEROUS_MALFUNCTION",
              "USAGE_IMPOSSIBLE",
              "RENEWAL_NECESSARY"
            ]
          },
          "emergenceDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage emerged.",
            "example": "2024-11-15T23:59:59Z"
          },
          "forecastDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage should be repaired.",
            "example": "2024-11-15T23:59:59Z"
          },
          "fixDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage was repaired.",
            "example": "2024-11-15T23:59:59Z"
          }
        },
        "description": "Reporting the charging point defects raw."
      },
      "ProcessedFacilityDamagesUpdateRequest": {
        "required": [
          "emergenceDate",
          "facilityType"
        ],
        "type": "object",
        "properties": {
          "facilityType": {
            "type": "string",
            "description": "Enum that represents a auxiliary facility that is available at a charging hub.",
            "example": "VEHICLE_SUPPLIES_WINDSHIELD_WIPER_SYSTEM",
            "enum": [
              "ROOF",
              "FOOD_SERVICE",
              "SEATING",
              "SANITATION",
              "VEHICLE_SUPPLIES_AIR_PRESSURE",
              "VEHICLE_SUPPLIES_WINDSHIELD_WIPER_SYSTEM",
              "VEHICLE_SUPPLIES_VACUUM_CLEANER",
              "GREEN_ROOF",
              "PHOTOVOLTAIC_SYSTEM",
              "LIGHTING"
            ]
          },
          "emergenceDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage emerged.",
            "example": "2024-11-15T23:59:59Z"
          },
          "fixDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage was repaired.",
            "example": "2024-11-15T23:59:59Z"
          },
          "forecastDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage should be repaired.",
            "example": "2024-11-15T23:59:59Z"
          }
        }
      },
      "ChargingStationUpdateRequest": {
        "required": [
          "chargingHubUid",
          "coordinates",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "The name of the Charging Station if no name given: “<Model Name> + <Charger ID>",
            "example": "WallBox NG Pro 21107439"
          },
          "chargingHubUid": {
            "type": "string",
            "description": "The uid of the Charging Hub for which Charging Station should be created",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "coordinates": {
            "$ref": "#/components/schemas/GeoLocation"
          },
          "chargingStationVendor": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "This contains a value that identifies the vendor of the Charging Station",
            "example": "ACME Inc."
          },
          "chargingStationVendorModel": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "The charging station model as specified by the vendor",
            "example": "Charger NG Pro"
          }
        }
      },
      "GeoLocation": {
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object",
        "properties": {
          "latitude": {
            "type": "string",
            "description": "Latitude of the point in decimal degree. Decimal separator: '.', Regex: -?[0-9]{1,2}\\.[0-9]{5,7}",
            "example": "50.770774"
          },
          "longitude": {
            "type": "string",
            "description": "Longitude of the point in decimal degree. Decimal separator: '.' Regex: -?[0-9]{1,3}\\.[0-9]{5,7}",
            "example": "-126.104965"
          }
        },
        "description": "This class defines the geo location of the Charge Point. The geodetic system to be used is WGS 84."
      },
      "ChargingPointUpdateRequest": {
        "required": [
          "capabilities",
          "connectors",
          "evseId",
          "status"
        ],
        "type": "object",
        "properties": {
          "evseId": {
            "maxLength": 48,
            "minLength": 0,
            "type": "string",
            "description": "Unique EVSE ID of the form '{Country Code}{Spot Operator ID}{ID Type}{Power Outlet ID}'",
            "example": "DE*ABC*E45B*78C"
          },
          "status": {
            "type": "string",
            "description": "Enum that represents the status of an charging point.",
            "example": "UNKNOWN",
            "enum": [
              "AVAILABLE",
              "BLOCKED",
              "CHARGING",
              "INOPERATIVE",
              "OUTOFORDER",
              "PLANNED",
              "REMOVED",
              "RESERVED",
              "UNKNOWN"
            ]
          },
          "capabilities": {
            "type": "array",
            "description": "List of capabilities of the charging point.",
            "items": {
              "type": "string",
              "description": "List of capabilities of the charging point.",
              "enum": [
                "CHARGING_PROFILE_CAPABLE",
                "CHARGING_PREFERENCES_CAPABLE",
                "CHIP_CARD_SUPPORT",
                "CONTACTLESS_CARD_SUPPORT",
                "CREDIT_CARD_PAYABLE",
                "DEBIT_CARD_PAYABLE",
                "PED_TERMINAL",
                "REMOTE_START_STOP_CAPABLE",
                "RESERVABLE",
                "RFID_READER",
                "TOKEN_GROUP_CAPABLE",
                "UNLOCK_CAPABLE",
                "START_SESSION_CONNECTOR_REQUIRED"
              ]
            }
          },
          "connectors": {
            "type": "array",
            "description": "Set of connectors offered by the charging point.",
            "items": {
              "$ref": "#/components/schemas/ConnectorRequest"
            }
          },
          "negligibleDefects": {
            "type": "boolean",
            "description": "Flag that describes if the charging point currently has any negligible defects.",
            "example": false
          }
        }
      },
      "ConnectorRequest": {
        "required": [
          "amperage",
          "format",
          "maxPower",
          "powerType",
          "standard",
          "voltage"
        ],
        "type": "object",
        "properties": {
          "connectorUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": " Identifier of the Connector within the EVSE. Two Connectors may have the same id as long as\n they do not belong to the same EVSE object.\n",
            "example": "1"
          },
          "standard": {
            "type": "string",
            "description": "The standard of the installed connector.",
            "enum": [
              "CHADEMO",
              "CHAOJI",
              "DOMESTIC_A",
              "DOMESTIC_B",
              "DOMESTIC_C",
              "DOMESTIC_D",
              "DOMESTIC_E",
              "DOMESTIC_F",
              "DOMESTIC_G",
              "DOMESTIC_H",
              "DOMESTIC_I",
              "DOMESTIC_J",
              "DOMESTIC_K",
              "DOMESTIC_L",
              "DOMESTIC_M",
              "DOMESTIC_N",
              "DOMESTIC_O",
              "GBT_AC",
              "GBT_DC",
              "IEC_60309_2_SINGLE_16",
              "IEC_60309_2_THREE_16",
              "IEC_60309_2_THREE_32",
              "IEC_60309_2_THREE_64",
              "IEC_62196_T1",
              "IEC_62196_T1_COMBO",
              "IEC_62196_T2",
              "IEC_62196_T2_COMBO",
              "IEC_62196_T3A",
              "IEC_62196_T3C",
              "NEMA_5_20",
              "NEMA_6_30",
              "NEMA_6_50",
              "NEMA_10_30",
              "NEMA_10_50",
              "NEMA_14_30",
              "NEMA_14_50",
              "PANTOGRAPH_BOTTOM_UP",
              "PANTOGRAPH_TOP_DOWN",
              "TESLA_R",
              "TESLA_S"
            ]
          },
          "powerType": {
            "type": "string",
            "enum": [
              "AC_1_PHASE",
              "AC_2_PHASE",
              "AC_2_PHASE_SPLIT",
              "AC_3_PHASE",
              "DC"
            ]
          },
          "format": {
            "type": "string",
            "description": "The format (socket/cable) of the installed connector.",
            "enum": [
              "SOCKET",
              "CABLE"
            ]
          },
          "voltage": {
            "maximum": 1000,
            "minimum": 200,
            "type": "integer",
            "description": "Maximum voltage of the connector (line to neutral for AC_3_PHASE), in volt [V]. For example:\nDC Chargers might vary the voltage during charging when battery almost full.\n",
            "format": "int32",
            "example": 250
          },
          "amperage": {
            "maximum": 500,
            "minimum": 5,
            "type": "integer",
            "description": "Maximum amperage of the connector, in ampere [A].",
            "format": "int32",
            "example": 16
          },
          "maxPower": {
            "maximum": 500,
            "minimum": 0,
            "type": "integer",
            "description": "Maximum electric power that can be delivered by this connector, in Watts (W). When the maximum\nelectric power is lower than the calculated value from voltage and amperage, this value should be set.\nFor example: A DC Charge Point which can delivers up to 920V and up to 400A can be limited to a maximum\nof 150kW (max_electric_power = 150000). Depending on the car, it may supply max voltage or current, but not\nboth at the same time.\nFor AC Charge Points, the amount of phases used can also have influence on the maximum power.\n",
            "format": "int32",
            "example": 450
          }
        },
        "description": "A Connector is the socket or cable and plug available for the EV to use.\nA single EVSE may provide multiple Connectors but only one of them can be in use at the same time.\nA Connector always belongs to an EVSE object.\n"
      },
      "CdrDimension": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of CDR dimension.",
            "example": "ENERGY",
            "enum": [
              "CURRENT",
              "ENERGY",
              "ENERGY_EXPORT",
              "ENERGY_IMPORT",
              "MAX_CURRENT",
              "MIN_CURRENT",
              "MAX_POWER",
              "MIN_POWER",
              "PARKING_TIME",
              "POWER"
            ]
          },
          "value": {
            "type": "number",
            "description": "Value of the dimension consumed, measured according to the dimension type.",
            "example": 79.65
          }
        },
        "description": "List of relevant values for this charging period."
      },
      "ChargingPeriod": {
        "required": [
          "dimensions",
          "signedValues",
          "start"
        ],
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "description": "The Date/Time when this charging period starts, in UTC.",
            "example": "2024-11-15T23:59:59"
          },
          "dimensions": {
            "type": "array",
            "description": "List of relevant values for this charging period.",
            "items": {
              "$ref": "#/components/schemas/CdrDimension"
            }
          },
          "encodingMethod": {
            "type": "string",
            "description": "The name of the encoding used in the signed data field of a signed value.",
            "example": "UTF-8"
          },
          "publicKey": {
            "maxLength": 512,
            "minLength": 0,
            "type": "string",
            "description": "Public key used to sign the data, base64 encoded.",
            "example": "MyPublicKey"
          },
          "signedValues": {
            "type": "array",
            "description": "One or more signed values.",
            "items": {
              "$ref": "#/components/schemas/SignedValue"
            }
          }
        },
        "description": "JSON-formatted object that represents a charging period of a charging session."
      },
      "ChargingSessionUpdateRequest": {
        "required": [
          "chargingHubUid",
          "end",
          "start",
          "tariffType",
          "totalCost",
          "totalEnergy",
          "totalParkingTime",
          "totalTime"
        ],
        "type": "object",
        "properties": {
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The uid of the Charging Hub connected with the Charging Session by Charging point",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingPointUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The uid of the Charging Point connected with the Charging Session",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "start": {
            "type": "string",
            "description": "The Date/Time when this charging sessions starts, in UTC.",
            "example": "2024-11-15T23:59:59"
          },
          "end": {
            "type": "string",
            "description": "The Date/Time when this charging sessions ends, in UTC.",
            "example": "2024-11-15T23:59:59"
          },
          "emaId": {
            "type": "string",
            "description": "Partly hashed authentication ID of the driver. Country code and provider ID should not be hashed.",
            "example": "DE-ABC-hashedPart"
          },
          "tariffType": {
            "type": "string",
            "description": "Enum that represents the type of tariff of a charging session.",
            "example": "AD_HOC_PAYMENT",
            "enum": [
              "ADD_HOC_PAYMENT",
              "PROFILE_CHEAP",
              "PROFILE_FAST",
              "PROFILE_GREEN",
              "REGULAR",
              "NON_BILLABLE"
            ]
          },
          "chargingPeriods": {
            "type": "array",
            "description": "A list of all charging periods of this charging session.",
            "items": {
              "$ref": "#/components/schemas/ChargingPeriod"
            }
          },
          "totalCost": {
            "type": "number",
            "description": "Total net cost (without VAT) of the charging session, including fixed costs, in Euro [€] for B2B pricing.",
            "example": 34.5
          },
          "totalEnergy": {
            "type": "number",
            "description": "Total amount of charged energy in kilowatt hour [kWh].",
            "example": 25.5
          },
          "totalTime": {
            "minimum": 0,
            "type": "integer",
            "description": "Total charging time in seconds [s].",
            "format": "int32",
            "example": 3600
          },
          "totalParkingTime": {
            "minimum": 0,
            "type": "integer",
            "description": "Total parking time without any charging in seconds [s].",
            "format": "int32",
            "example": 600
          },
          "reason": {
            "type": "string",
            "description": "Reason (OCPP) for ending the charging session.",
            "example": "POWERLOSS",
            "enum": [
              "EMERGENCY_STOP",
              "EV_DISCONNECTED",
              "HARDRESET",
              "LOCAL",
              "OTHER",
              "POWERLOSS",
              "REBOOT",
              "REMOTE",
              "SOFT_RESET",
              "UNLOCK_COMMAND",
              "DEAUTHORIZED"
            ]
          }
        }
      },
      "SignedValue": {
        "required": [
          "plainData",
          "signedData"
        ],
        "type": "object",
        "properties": {
          "nature": {
            "type": "string",
            "description": "Nature of the value, in other words, the event this value belongs to.\n\"Possible values at moment of writing:\n  - Start (value at the start of the Session)\n  - End (signed value at the end of the Session)\n  - Intermediate (signed values take during the Session, after Start, before End)\nOthers might be added later.\n"
          },
          "plainData": {
            "maxLength": 512,
            "minLength": 0,
            "type": "string",
            "description": "The unencoded string of data. The format of the content depends on the EncodingMethod field.",
            "example": "12000"
          },
          "signedData": {
            "maxLength": 512,
            "minLength": 0,
            "type": "string",
            "description": "Blob of signed data, base64 encoded. The format of the content depends on the EncodingMethod field.",
            "example": "SignedDataString"
          }
        },
        "description": "This class contains the signed and the plain/unsigned data. By decoding the data, the receiver can check if the content has not been altered."
      },
      "ChargingHubUpdateRequest": {
        "required": [
          "address",
          "city",
          "coordinates",
          "name",
          "negligibleDamages",
          "operator",
          "owner",
          "postalCode",
          "state"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Six-digit contract manager ID of charging hub, hyphen and self-selected name.",
            "example": "130950-Parkplatz am Weissen Ross"
          },
          "address": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "description": "Address of the charging hub.",
            "example": "Am Stellwerk 1"
          },
          "postalCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Postal code of the charging hub.",
            "example": "70197"
          },
          "city": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "description": "City of the charging hub.",
            "example": "Stuttgart"
          },
          "state": {
            "type": "string",
            "description": "Enum that represents the german states using exactly 2 letters.",
            "example": "BW",
            "enum": [
              "BB",
              "BE",
              "BW",
              "BY",
              "HB",
              "HE",
              "HH",
              "MV",
              "NI",
              "NW",
              "RP",
              "SH",
              "SL",
              "SN",
              "ST",
              "TH"
            ]
          },
          "coordinates": {
            "$ref": "#/components/schemas/GeoLocation"
          },
          "operator": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the responsible operator. Must be 5 alphanumeric digits.",
            "example": "DE123"
          },
          "owner": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of charging hub owner.",
            "example": "Allego GmbH"
          },
          "auxiliaryFacilities": {
            "type": "array",
            "description": "Set of facilities that are available at the charging hub.",
            "example": [
              "FOOD_SERVICE",
              "GREEN_ROOF"
            ],
            "items": {
              "type": "string",
              "description": "Enum that represents a auxiliary facility that is available at a charging hub.",
              "example": "[\"FOOD_SERVICE\",\"GREEN_ROOF\"]",
              "enum": [
                "ROOF",
                "FOOD_SERVICE",
                "SEATING",
                "SANITATION",
                "VEHICLE_SUPPLIES_AIR_PRESSURE",
                "VEHICLE_SUPPLIES_WINDSHIELD_WIPER_SYSTEM",
                "VEHICLE_SUPPLIES_VACUUM_CLEANER",
                "GREEN_ROOF",
                "PHOTOVOLTAIC_SYSTEM",
                "LIGHTING"
              ]
            }
          },
          "negligibleDamages": {
            "type": "boolean",
            "description": "Flag that describes if there are any negligible damages at charging hub.",
            "example": false
          },
          "lastUpdated": {
            "type": "string",
            "description": "Date this charging hub was last modified by the CPO provider",
            "example": "2024-11-15T23:59:59Z"
          }
        }
      },
      "CreateHotlineRatingReportRequest": {
        "required": [
          "averageSpeedOfAnswer",
          "firstCallResolutionRate",
          "hotlineCalls",
          "monthYear",
          "rating"
        ],
        "type": "object",
        "properties": {
          "monthYear": {
            "maxLength": 7,
            "minLength": 0,
            "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
            "type": "string",
            "description": "The reported month formatted as 'MM-yyyy'.",
            "example": "09-2024"
          },
          "hotlineCalls": {
            "minimum": 0,
            "type": "integer",
            "description": "Amount of hotline calls.",
            "format": "int32"
          },
          "firstCallResolutionRate": {
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "description": "First call resolution rate."
          },
          "averageSpeedOfAnswer": {
            "minimum": 0,
            "type": "number",
            "description": "Average speed of answer in seconds [s]."
          },
          "rating": {
            "maximum": 6,
            "minimum": 1,
            "type": "integer",
            "description": "Average customer charging hub rating in german school grades (1 = best, 6 = worst).",
            "format": "int32"
          }
        },
        "description": "Reporting the raw hotline rating report."
      },
      "ChargingPointRenewalReport": {
        "required": [
          "chargingHubUid",
          "chargingPointUid",
          "end",
          "identityKey",
          "renewalUid",
          "renewedComponents",
          "start",
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Internal unique identifier of a Charging Point Renewal report",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The unique identifier of a Charging Hub",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "identityKey": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "The Identity Key of the Charging Station",
            "example": "ACE123"
          },
          "chargingPointUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The unique identifier of a Charging Point",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "renewalUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The unique identifier of a Charging point renewal report",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "renewedComponents": {
            "type": "array",
            "description": "Set of renewed charging point components. At least one element must be provided.",
            "items": {
              "$ref": "#/components/schemas/RenewedComponent"
            }
          },
          "start": {
            "type": "string",
            "description": "The Date/Time when  the renewal work has started/will start. In UTC",
            "example": "2024-11-15T23:59:59"
          },
          "end": {
            "type": "string",
            "description": "The Date/Time when the renewal work was finished/is scheduled to finish. In UTC",
            "example": "2024-11-15T23:59:59"
          }
        },
        "description": "Charging Point Renewal Raw report response"
      },
      "ChargingPointRenewalReportResponse": {
        "type": "object",
        "properties": {
          "chargingPointRenewalReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChargingPointRenewalReport"
            }
          }
        }
      },
      "CreateChargingPointRenewalReportRequest": {
        "required": [
          "chargingHubUid",
          "chargingPointUid",
          "end",
          "identityKey",
          "renewalUid",
          "renewedComponents",
          "start"
        ],
        "type": "object",
        "properties": {
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The unique identifier of a Charging Hub",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "identityKey": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "The Identity Key of the Charging Station",
            "example": "ACE123"
          },
          "chargingPointUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The unique identifier of a Charging Point",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "renewalUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The unique identifier of a Charging point renewal report",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "renewedComponents": {
            "type": "array",
            "description": "Set of renewed charging point components. At least one element must be provided.",
            "items": {
              "$ref": "#/components/schemas/RenewedComponent"
            }
          },
          "start": {
            "type": "string",
            "description": "The Date/Time when  the renewal work has started/will start. In UTC",
            "example": "2024-11-15T23:59:59"
          },
          "end": {
            "type": "string",
            "description": "The Date/Time when the renewal work was finished/is scheduled to finish. In UTC",
            "example": "2024-11-15T23:59:59"
          }
        },
        "description": "Reporting the raw renewal at a charging point."
      },
      "CreateChargingPointRatingReportRequest": {
        "required": [
          "chargingHubUid",
          "monthYear",
          "rating"
        ],
        "type": "object",
        "properties": {
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The unique identifier of a Charging Hub",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingPointUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The uid of the Charging Point connected with the Charging Session",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "identityKey": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The uid of the Charging Point connected with the Charging Session",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "monthYear": {
            "maxLength": 7,
            "minLength": 0,
            "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
            "type": "string",
            "description": "The reported month formatted as 'MM-yyyy'.",
            "example": "09-2024"
          },
          "rating": {
            "maximum": 6,
            "minimum": 1,
            "type": "integer",
            "description": "Average customer charging hub rating in german school grades (1 = best, 6 = worst)",
            "format": "int32"
          },
          "totalComplaints": {
            "minimum": 0,
            "type": "integer",
            "description": "The amount of the received complaints for charging sessions at the charging point in question.",
            "format": "int32"
          }
        },
        "description": "Reporting the raw rating at a charging hub."
      },
      "ChargingPointDefectsReportRequest": {
        "required": [
          "activities",
          "chargingHubUid",
          "chargingPointUid",
          "emergenceDate",
          "identityKey",
          "status",
          "type",
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Charging Point Defects Uid.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Charging Hub UID.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "identityKey": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "Charging Station identity key.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingPointUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Charging Point UID.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "type": {
            "type": "string",
            "description": "Enum that represents the type of error/defect that occurred at a charging point.",
            "example": "SOFTWARE_FAULT",
            "enum": [
              "DAMAGE",
              "HARDWARE_FAULT",
              "SOFTWARE_FAULT",
              "NETWORK_FAILURE",
              "POWER_FAILURE",
              "ROUTE_CLOSURE",
              "SITE_CLOSURE",
              "OTHER"
            ]
          },
          "status": {
            "type": "string",
            "description": "Enum that represents the status of a charge point defect that occurred at a charging point.",
            "example": "TECHNICIAN_INFORMED",
            "enum": [
              "TECHNICIAN_INFORMED",
              "TECHNICIAN_ON_THE_WAY",
              "ERROR_SOLVED"
            ]
          },
          "activities": {
            "type": "string",
            "description": "Necessary activities for fixing the error.",
            "example": "REMOTE_ACCESS",
            "enum": [
              "REMOTE_ACCESS",
              "ON_SITE"
            ]
          },
          "additionalInformation": {
            "type": "string",
            "description": "Enum that represents the type of error/defect that occurred at a charging point.",
            "example": "RENEWAL_NECESSARY",
            "enum": [
              "DANGEROUS_MALFUNCTION",
              "USAGE_IMPOSSIBLE",
              "RENEWAL_NECESSARY"
            ]
          },
          "emergenceDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage emerged.",
            "example": "2024-11-15T23:59:59Z"
          },
          "forecastDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage should be repaired.",
            "example": "2024-11-15T23:59:59Z"
          },
          "fixDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage was repaired.",
            "example": "2024-11-15T23:59:59Z"
          }
        },
        "description": "Reporting the charging point defects raw."
      },
      "CreateRatingReportRequest": {
        "required": [
          "chargingHubUid",
          "monthYear",
          "rating"
        ],
        "type": "object",
        "properties": {
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The unique identifier of a Charging Hub",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "monthYear": {
            "maxLength": 7,
            "minLength": 0,
            "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
            "type": "string",
            "description": "The reported month formatted as 'MM-yyyy'.",
            "example": "09-2024"
          },
          "rating": {
            "maximum": 6,
            "minimum": 1,
            "type": "integer",
            "description": "Average customer charging hub rating in german school grades (1 = best, 6 = worst)",
            "format": "int32"
          }
        },
        "description": "Reporting the raw rating at a charging hub."
      },
      "FacilityDamagesReport": {
        "required": [
          "chargingHubUid",
          "emergenceDate",
          "facilityType",
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Facility Damage Uid.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Charging Hub UID.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "facilityType": {
            "type": "string",
            "description": "Enum that represents a auxiliary facility that is available at a charging hub.",
            "example": "VEHICLE_SUPPLIES_WINDSHIELD_WIPER_SYSTEM",
            "enum": [
              "ROOF",
              "FOOD_SERVICE",
              "SEATING",
              "SANITATION",
              "VEHICLE_SUPPLIES_AIR_PRESSURE",
              "VEHICLE_SUPPLIES_WINDSHIELD_WIPER_SYSTEM",
              "VEHICLE_SUPPLIES_VACUUM_CLEANER",
              "GREEN_ROOF",
              "PHOTOVOLTAIC_SYSTEM",
              "LIGHTING"
            ]
          },
          "emergenceDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage emerged.",
            "example": "2024-11-15T23:59:59Z"
          },
          "fixDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage was repaired.",
            "example": "2024-11-15T23:59:59Z"
          },
          "forecastDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage should be repaired.",
            "example": "2024-11-15T23:59:59Z"
          }
        },
        "description": "Reporting the raw facility damages at a charging hub."
      },
      "CreateAdHocTariffReportRequest": {
        "required": [
          "chargingHubUid",
          "monthYear",
          "validFrom",
          "validTo"
        ],
        "type": "object",
        "properties": {
          "monthYear": {
            "maxLength": 7,
            "minLength": 0,
            "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
            "type": "string",
            "description": "The reported month formatted as 'MM-yyyy'.",
            "example": "09-2024"
          },
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Existent Charging Hub UID provided by CPO and used to mapping with internal uid.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "cost": {
            "minimum": 0,
            "type": "integer",
            "description": "Net cost (without VAT) in cents [ct] per kilowatt hour [kWh].",
            "format": "int32"
          },
          "additionalCosts": {
            "type": "array",
            "description": "Optional set of additional fees/costs.",
            "items": {
              "$ref": "#/components/schemas/AdditionalCost"
            }
          },
          "validFrom": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SSZ' formatted UTC datetime for when the charge access started being valid.",
            "example": "2024-11-15T23:59:59Z"
          },
          "validTo": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SSZ' formatted UTC datetime for when the charge access expired.",
            "example": "2024-11-15T23:59:59Z"
          }
        },
        "description": "Reporting the raw ad-hoc-tariff at a charging hub."
      },
      "NonDiscriminatoryAccessProcessedReportRequest": {
        "required": [
          "contractualBasis",
          "cost",
          "monthYear",
          "providerGroup",
          "uid",
          "validFrom",
          "validTo"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The unique identifier of a Non-Discriminatory access report",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "monthYear": {
            "maxLength": 7,
            "minLength": 0,
            "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
            "type": "string",
            "description": "The reported month formatted as 'MM-yyyy'.",
            "example": "09-2024"
          },
          "providerGroup": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "Unique BDEW code of the provider group in question. 5 uppercase characters long, starting with 2 letters.",
            "example": "DEVFL"
          },
          "cost": {
            "minimum": 0,
            "type": "integer",
            "description": "net cost (without VAT) in cents [ct] per kilowatt hour [kWh].",
            "format": "int32"
          },
          "additionalCosts": {
            "type": "array",
            "description": "Optional set of additional fees/costs.",
            "items": {
              "$ref": "#/components/schemas/AdditionalCost"
            }
          },
          "validFrom": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SSZ' formatted UTC datetime for when the charge access started being valid.",
            "example": "2024-11-15T23:59:59Z"
          },
          "validTo": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SSZ' formatted UTC datetime for when the charge access expired.",
            "example": "2024-11-15T23:59:59Z"
          },
          "contractualBasis": {
            "type": "string",
            "description": "Enum that represents the contractual basis for charge access at a charging hub.",
            "example": "ROAMING_CONTRACT"
          },
          "reasoningDifferentCosts": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Reason why the provider group has a different fee than all others.",
            "example": "Some reason."
          }
        },
        "description": "Reporting the processed Non-Discriminatory access."
      },
      "FacilityDamagesCreateReportRequest": {
        "required": [
          "chargingHubUid",
          "emergenceDate",
          "facilityType",
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Facility Damage Uid.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Charging Hub UID.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "facilityType": {
            "type": "string",
            "description": "Enum that represents a auxiliary facility that is available at a charging hub.",
            "example": "VEHICLE_SUPPLIES_WINDSHIELD_WIPER_SYSTEM",
            "enum": [
              "ROOF",
              "FOOD_SERVICE",
              "SEATING",
              "SANITATION",
              "VEHICLE_SUPPLIES_AIR_PRESSURE",
              "VEHICLE_SUPPLIES_WINDSHIELD_WIPER_SYSTEM",
              "VEHICLE_SUPPLIES_VACUUM_CLEANER",
              "GREEN_ROOF",
              "PHOTOVOLTAIC_SYSTEM",
              "LIGHTING"
            ]
          },
          "emergenceDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage emerged.",
            "example": "2024-11-15T23:59:59Z"
          },
          "fixDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage was repaired.",
            "example": "2024-11-15T23:59:59Z"
          },
          "forecastDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage should be repaired.",
            "example": "2024-11-15T23:59:59Z"
          }
        },
        "description": "Reporting the raw facility damages at a charging hub."
      },
      "ChargingStationRequest": {
        "required": [
          "chargingHubUid",
          "coordinates",
          "identityKey",
          "name"
        ],
        "type": "object",
        "properties": {
          "identityKey": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "The Identity Key of the Charging Station",
            "example": "ACE123"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "The name of the Charging Station if no name given: “<Model Name> + <Charger ID>",
            "example": "WallBox NG Pro 21107439"
          },
          "chargingHubUid": {
            "type": "string",
            "description": "The uid of the Charging Hub for which Charging Station should be created",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "coordinates": {
            "$ref": "#/components/schemas/GeoLocation"
          },
          "chargingStationVendor": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "This contains a value that identifies the vendor of the Charging Station",
            "example": "ACME Inc."
          },
          "chargingStationVendorModel": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "The charging station model as specified by the vendor",
            "example": "Charger NG Pro"
          }
        }
      },
      "ChargingPointRequest": {
        "required": [
          "capabilities",
          "connectors",
          "evseId",
          "status"
        ],
        "type": "object",
        "properties": {
          "evseId": {
            "maxLength": 48,
            "minLength": 0,
            "type": "string",
            "description": "Unique EVSE ID of the form '{Country Code}{Spot Operator ID}{ID Type}{Power Outlet ID}'",
            "example": "DE*ABC*E45B*78C"
          },
          "status": {
            "type": "string",
            "description": "Enum that represents the status of ancharging point.",
            "example": "UNKNOWN",
            "enum": [
              "AVAILABLE",
              "BLOCKED",
              "CHARGING",
              "INOPERATIVE",
              "OUTOFORDER",
              "PLANNED",
              "REMOVED",
              "RESERVED",
              "UNKNOWN"
            ]
          },
          "capabilities": {
            "type": "array",
            "description": "List of capabilities of the charging point.",
            "items": {
              "type": "string",
              "description": "List of capabilities of the charging point.",
              "enum": [
                "CHARGING_PROFILE_CAPABLE",
                "CHARGING_PREFERENCES_CAPABLE",
                "CHIP_CARD_SUPPORT",
                "CONTACTLESS_CARD_SUPPORT",
                "CREDIT_CARD_PAYABLE",
                "DEBIT_CARD_PAYABLE",
                "PED_TERMINAL",
                "REMOTE_START_STOP_CAPABLE",
                "RESERVABLE",
                "RFID_READER",
                "TOKEN_GROUP_CAPABLE",
                "UNLOCK_CAPABLE",
                "START_SESSION_CONNECTOR_REQUIRED"
              ]
            }
          },
          "connectors": {
            "type": "array",
            "description": "Set of connectors offered by the charging point.",
            "items": {
              "$ref": "#/components/schemas/ConnectorRequest"
            }
          },
          "negligibleDamages": {
            "type": "boolean",
            "description": "Flag that describes if the charging point currently has any negligible defects.",
            "example": false
          },
          "predecessor": {
            "type": "string",
            "description": "Unique ID of the predecessor of this charging point (if available).“",
            "example": "Predecessor id"
          }
        }
      },
      "ChargingSessionRequest": {
        "required": [
          "chargingHubUid",
          "chargingSessionUid",
          "connectorId",
          "end",
          "start",
          "tariffType",
          "totalCost",
          "totalEnergy",
          "totalParkingTime",
          "totalTime"
        ],
        "type": "object",
        "properties": {
          "chargingSessionUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Existent Charging Session uid provided by CPO and used to mapping with internal uid.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The uid of the Charging Hub connected with the Charging Session by Charging point",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingPointUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The uid of the Charging Point connected with the Charging Session",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "connectorId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Identifier of the connector within the EVSE."
          },
          "start": {
            "type": "string",
            "description": "The Date/Time when this charging sessions starts, in UTC.",
            "example": "2024-11-15T23:59:59"
          },
          "end": {
            "type": "string",
            "description": "The Date/Time when this charging sessions ends, in UTC.",
            "example": "2024-11-15T23:59:59"
          },
          "emaId": {
            "type": "string",
            "description": "Partly hashed authentication ID of the driver. Country code and provider ID should not be hashed.",
            "example": "DE-ABC-hashedPart"
          },
          "tariffType": {
            "type": "string",
            "description": "Enum that represents the type of tariff of a charging session.",
            "example": "AD_HOC_PAYMENT",
            "enum": [
              "ADD_HOC_PAYMENT",
              "PROFILE_CHEAP",
              "PROFILE_FAST",
              "PROFILE_GREEN",
              "REGULAR",
              "NON_BILLABLE"
            ]
          },
          "chargingPeriods": {
            "type": "array",
            "description": "A list of all charging periods of this charging session.",
            "items": {
              "$ref": "#/components/schemas/ChargingPeriod"
            }
          },
          "totalCost": {
            "type": "number",
            "description": "Total net cost (without VAT) of the charging session, including fixed costs, in Euro [€] for B2B pricing.",
            "example": 34.5
          },
          "totalEnergy": {
            "type": "number",
            "description": "Total amount of charged energy in kilowatt hour [kWh].",
            "example": 25.5
          },
          "totalTime": {
            "minimum": 0,
            "type": "integer",
            "description": "Total charging time in seconds [s].",
            "format": "int32",
            "example": 3600
          },
          "totalParkingTime": {
            "minimum": 0,
            "type": "integer",
            "description": "Total parking time without any charging in seconds [s].",
            "format": "int32",
            "example": 600
          },
          "reason": {
            "type": "string",
            "description": "Reason (OCPP) for ending the charging session.",
            "example": "POWERLOSS",
            "enum": [
              "EMERGENCY_STOP",
              "EV_DISCONNECTED",
              "HARDRESET",
              "LOCAL",
              "OTHER",
              "POWERLOSS",
              "REBOOT",
              "REMOTE",
              "SOFT_RESET",
              "UNLOCK_COMMAND",
              "DEAUTHORIZED"
            ]
          }
        }
      },
      "ChargingHubRequest": {
        "required": [
          "address",
          "city",
          "coordinates",
          "id",
          "name",
          "negligibleDamages",
          "operator",
          "owner",
          "postalCode",
          "state"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Six-digit contract manager ID of charging hub, hyphen and self-selected name.",
            "example": "130950-Parkplatz am Weissen Ross"
          },
          "address": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "description": "Address of the charging hub.",
            "example": "Am Stellwerk 1"
          },
          "postalCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Postal code of the charging hub.",
            "example": "70197"
          },
          "city": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "description": "City of the charging hub.",
            "example": "Stuttgart"
          },
          "state": {
            "type": "string",
            "description": "Enum that represents the german states using exactly 2 letters.",
            "example": "BW",
            "enum": [
              "BB",
              "BE",
              "BW",
              "BY",
              "HB",
              "HE",
              "HH",
              "MV",
              "NI",
              "NW",
              "RP",
              "SH",
              "SL",
              "SN",
              "ST",
              "TH"
            ]
          },
          "coordinates": {
            "$ref": "#/components/schemas/GeoLocation"
          },
          "operator": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the responsible operator. Must be 5 alphanumeric digits.",
            "example": "DE123"
          },
          "owner": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of charging hub owner.",
            "example": "Allego GmbH"
          },
          "auxiliaryFacilities": {
            "type": "array",
            "description": "Set of facilities that are available at the charging hub.",
            "example": "[FOOD_SERVICE, GREEN_ROOF]",
            "items": {
              "type": "string",
              "description": "Enum that represents a auxiliary facility that is available at a charging hub.",
              "example": "[FOOD_SERVICE, GREEN_ROOF]",
              "enum": [
                "ROOF",
                "FOOD_SERVICE",
                "SEATING",
                "SANITATION",
                "VEHICLE_SUPPLIES_AIR_PRESSURE",
                "VEHICLE_SUPPLIES_WINDSHIELD_WIPER_SYSTEM",
                "VEHICLE_SUPPLIES_VACUUM_CLEANER",
                "GREEN_ROOF",
                "PHOTOVOLTAIC_SYSTEM",
                "LIGHTING"
              ]
            }
          },
          "negligibleDamages": {
            "type": "boolean",
            "description": "Flag that describes if there are any negligible damages at charging hub.",
            "example": false
          },
          "lastUpdated": {
            "type": "string",
            "description": "Date this charging hub was last modified by the CPO provider",
            "example": "2024-11-15T23:59:59Z"
          },
          "id": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Charging Hub UID.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          }
        }
      },
      "NonDiscriminatoryAccessReportResponse": {
        "required": [
          "contractualBasis",
          "cost",
          "monthYear",
          "providerGroup",
          "validFrom",
          "validTo"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The report UID.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "monthYear": {
            "maxLength": 7,
            "minLength": 0,
            "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
            "type": "string",
            "description": "The reported month formatted as 'MM-yyyy'.",
            "example": "09-2024"
          },
          "providerGroup": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "Unique BDEW code of the provider group in question. 5 uppercase characters long, starting with 2 letters.",
            "example": "DEVFL"
          },
          "cost": {
            "maximum": 12,
            "minimum": 0,
            "type": "integer",
            "description": "net cost (without VAT) in cents [ct] per kilowatt hour [kWh].",
            "format": "int32"
          },
          "additionalCosts": {
            "type": "array",
            "description": "Optional set of additional fees/costs.",
            "items": {
              "$ref": "#/components/schemas/AdditionalCost"
            }
          },
          "validFrom": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SSZ' formatted UTC datetime for when the charge access started being valid.",
            "example": "2024-11-15T23:59:59Z"
          },
          "validTo": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SSZ' formatted UTC datetime for when the charge access expired.",
            "example": "2024-11-15T23:59:59Z"
          },
          "contractualBasis": {
            "type": "string",
            "description": "Enum that represents the contractual basis for charge access at a charging hub.",
            "example": "ROAMING_CONTRACT"
          },
          "reasoningDifferentCosts": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Reason why the provider group has a different fee than all others.",
            "example": "Some reason."
          },
          "lastModifiedDate": {
            "type": "string",
            "description": "The date and time when the report was last modified",
            "format": "date-time"
          }
        },
        "description": "Reporting the raw Non-Discriminatory access."
      },
      "HotlineRatingRawResponse": {
        "required": [
          "averageSpeedOfAnswer",
          "firstCallResolutionRate",
          "hotlineCalls",
          "monthYear",
          "rating"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The report UID.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "monthYear": {
            "maxLength": 7,
            "minLength": 0,
            "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
            "type": "string",
            "description": "The reported month formatted as 'MM-yyyy'.",
            "example": "09-2024"
          },
          "hotlineCalls": {
            "minimum": 0,
            "type": "integer",
            "description": "Amount of hotline calls.",
            "format": "int32"
          },
          "firstCallResolutionRate": {
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "description": "First call resolution rate."
          },
          "averageSpeedOfAnswer": {
            "minimum": 0,
            "type": "number",
            "description": "Average speed of answer in seconds [s]."
          },
          "rating": {
            "maximum": 6,
            "minimum": 1,
            "type": "integer",
            "description": "Average customer charging hub rating in german school grades (1 = best, 6 = worst).",
            "format": "int32"
          }
        }
      },
      "ChargingPointRenewalReportExtendedResponse": {
        "required": [
          "chargingHubUid",
          "chargingPointUid",
          "end",
          "identityKey",
          "renewalUid",
          "renewedComponents",
          "start",
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Internal unique identifier of a Charging Point Renewal report",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The unique identifier of a Charging Hub",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "identityKey": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "The Identity Key of the Charging Station",
            "example": "ACE123"
          },
          "chargingPointUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The unique identifier of a Charging Point",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "renewalUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The unique identifier of a Charging point renewal report",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "renewedComponents": {
            "type": "array",
            "description": "Set of renewed charging point components. At least one element must be provided.",
            "items": {
              "$ref": "#/components/schemas/RenewedComponent"
            }
          },
          "start": {
            "type": "string",
            "description": "The Date/Time when  the renewal work has started/will start. In UTC",
            "example": "2024-11-15T23:59:59"
          },
          "end": {
            "type": "string",
            "description": "The Date/Time when the renewal work was finished/is scheduled to finish. In UTC",
            "example": "2024-11-15T23:59:59"
          },
          "lastModifiedDate": {
            "type": "string",
            "description": "The date and time when the report was last modified",
            "format": "date-time"
          }
        }
      },
      "ChargingPointRatingReport": {
        "required": [
          "chargingHubUid",
          "monthYear",
          "rating"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The report UID.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Existent Charging Hub ID provided by CPO and used to mapping with internal id.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingPointUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The uid of the Charging Point connected with the Charging Session",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "monthYear": {
            "maxLength": 7,
            "minLength": 0,
            "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
            "type": "string",
            "description": "The reported month formatted as 'MM-yyyy'.",
            "example": "09-2024"
          },
          "rating": {
            "maximum": 6,
            "minimum": 1,
            "type": "integer",
            "description": "Average customer charging hub rating in german school grades (1 = best, 6 = worst)",
            "format": "int32"
          },
          "totalComplaints": {
            "minimum": 0,
            "type": "integer",
            "description": "The amount of the received complaints for charging sessions at the charging point in question.",
            "format": "int32"
          }
        }
      },
      "ChargingPointRatingResponse": {
        "type": "object",
        "properties": {
          "chargingPointRatingReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChargingPointRatingReport"
            }
          }
        }
      },
      "ChargingPointDefectsRawReportResponse": {
        "required": [
          "activities",
          "chargingHubUid",
          "chargingPointUid",
          "emergenceDate",
          "status",
          "type",
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Charging Point Defects Uid.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Charging Hub UID.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingPointUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Charging Point UID.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "type": {
            "type": "string",
            "description": "Enum that represents the type of error/defect that occurred at a charging point.",
            "example": "SOFTWARE_FAULT",
            "enum": [
              "DAMAGE",
              "HARDWARE_FAULT",
              "SOFTWARE_FAULT",
              "NETWORK_FAILURE",
              "POWER_FAILURE",
              "ROUTE_CLOSURE",
              "SITE_CLOSURE",
              "OTHER"
            ]
          },
          "status": {
            "type": "string",
            "description": "Enum that represents the status of a charge point defect that occurred at a charging point.",
            "example": "TECHNICIAN_INFORMED",
            "enum": [
              "TECHNICIAN_INFORMED",
              "TECHNICIAN_ON_THE_WAY",
              "ERROR_SOLVED"
            ]
          },
          "activities": {
            "type": "string",
            "description": "Necessary activities for fixing the error.",
            "example": "REMOTE_ACCESS",
            "enum": [
              "REMOTE_ACCESS",
              "ON_SITE"
            ]
          },
          "additionalInformation": {
            "type": "string",
            "description": "Enum that represents the type of error/defect that occurred at a charging point.",
            "example": "RENEWAL_NECESSARY",
            "enum": [
              "DANGEROUS_MALFUNCTION",
              "USAGE_IMPOSSIBLE",
              "RENEWAL_NECESSARY"
            ]
          },
          "emergenceDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage emerged.",
            "example": "2024-11-15T23:59:59Z"
          },
          "forecastDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage should be repaired.",
            "example": "2024-11-15T23:59:59Z"
          },
          "fixDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage was repaired.",
            "example": "2024-11-15T23:59:59Z"
          },
          "lastModifiedDate": {
            "type": "string",
            "description": "The date and time when the report was last modified",
            "format": "date-time",
            "example": "2024-11-15T23:59:59Z"
          }
        },
        "description": "Reporting the charging point defects raw."
      },
      "RatingResponse": {
        "required": [
          "chargingHubUid",
          "monthYear",
          "rating"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The report UID.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "monthYear": {
            "maxLength": 7,
            "minLength": 0,
            "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
            "type": "string",
            "description": "The reported month formatted as 'MM-yyyy'.",
            "example": "09-2024"
          },
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Existent Charging Hub ID provided by CPO and used to mapping with internal id.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "rating": {
            "maximum": 6,
            "minimum": 1,
            "type": "integer",
            "description": "Average customer charging hub rating in german school grades (1 = best, 6 = worst)",
            "format": "int32"
          }
        }
      },
      "FacilityDamagesReportResponse": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Facility Damage Uid.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Charging Hub UID.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "facilityType": {
            "type": "string",
            "description": "Enum that represents a auxiliary facility that is available at a charging hub.",
            "example": "VEHICLE_SUPPLIES_WINDSHIELD_WIPER_SYSTEM",
            "enum": [
              "ROOF",
              "FOOD_SERVICE",
              "SEATING",
              "SANITATION",
              "VEHICLE_SUPPLIES_AIR_PRESSURE",
              "VEHICLE_SUPPLIES_WINDSHIELD_WIPER_SYSTEM",
              "VEHICLE_SUPPLIES_VACUUM_CLEANER",
              "GREEN_ROOF",
              "PHOTOVOLTAIC_SYSTEM",
              "LIGHTING"
            ]
          },
          "emergenceDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage emerged.",
            "example": "2024-11-15T23:59:59Z"
          },
          "fixDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage was repaired.",
            "example": "2024-11-15T23:59:59Z"
          },
          "lastModifiedDate": {
            "type": "string",
            "description": "The date and time when the report was last modified",
            "format": "date-time"
          },
          "forecastDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage should be repaired.",
            "example": "2024-11-15T23:59:59Z"
          }
        },
        "description": "Reporting the raw facility damages at a charging hub."
      },
      "AdHocTariffResponse": {
        "required": [
          "chargingHubUid",
          "monthYear",
          "validFrom",
          "validTo"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The report UID.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "monthYear": {
            "maxLength": 7,
            "minLength": 0,
            "pattern": "(0[1-9]|1[0-2])-\\d{4}\b",
            "type": "string",
            "description": "The reported month formatted as 'MM-yyyy'.",
            "example": "09-2024"
          },
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Existent Charging Hub UID provided by CPO and used to mapping with internal uid.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "cost": {
            "minimum": 0,
            "type": "integer",
            "description": "Net cost (without VAT) in cents [ct] per kilowatt hour [kWh].",
            "format": "int32"
          },
          "additionalCosts": {
            "type": "array",
            "description": "Optional set of additional fees/costs.",
            "items": {
              "$ref": "#/components/schemas/AdditionalCost"
            }
          },
          "validFrom": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SSZ' formatted UTC datetime for when the charge access started being valid.",
            "example": "2024-11-15T23:59:59Z"
          },
          "validTo": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SSZ' formatted UTC datetime for when the charge access expired.",
            "example": "2024-11-15T23:59:59Z"
          }
        }
      },
      "GlobalProcessedReportResponse": {
        "type": "object",
        "properties": {
          "reportType": {
            "type": "string",
            "description": "Enum that represents global report type that is available.",
            "example": "HOTLINE_RATING",
            "enum": [
              "HOTLINE_RATING",
              "NON_DISCRIMINATORY_ACCESS"
            ]
          },
          "reportDate": {
            "type": "string",
            "description": "The date and time when the report was generated.",
            "format": "date-time"
          },
          "reportedBy": {
            "type": "string",
            "description": "The name of the person who created the report."
          },
          "modifiedBy": {
            "type": "string",
            "description": "The name of the person who last modified the report."
          },
          "uid": {
            "type": "string",
            "description": "The unique identifier of the report."
          },
          "lastModifiedDate": {
            "type": "string",
            "description": "The date and time when the report was modified.",
            "format": "date-time"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ChargingPointDefectsProcessedReportResponse": {
        "required": [
          "activities",
          "chargingHubUid",
          "chargingPointUid",
          "emergenceDate",
          "status",
          "type",
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Charging Point Defects Uid.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Charging Hub UID.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingPointUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Charging Point UID.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "type": {
            "type": "string",
            "description": "Enum that represents the type of error/defect that occurred at a charging point.",
            "example": "SOFTWARE_FAULT",
            "enum": [
              "DAMAGE",
              "HARDWARE_FAULT",
              "SOFTWARE_FAULT",
              "NETWORK_FAILURE",
              "POWER_FAILURE",
              "ROUTE_CLOSURE",
              "SITE_CLOSURE",
              "OTHER"
            ]
          },
          "status": {
            "type": "string",
            "description": "Enum that represents the status of a charge point defect that occurred at a charging point.",
            "example": "TECHNICIAN_INFORMED",
            "enum": [
              "TECHNICIAN_INFORMED",
              "TECHNICIAN_ON_THE_WAY",
              "ERROR_SOLVED"
            ]
          },
          "activities": {
            "type": "string",
            "description": "Necessary activities for fixing the error.",
            "example": "REMOTE_ACCESS",
            "enum": [
              "REMOTE_ACCESS",
              "ON_SITE"
            ]
          },
          "additionalInformation": {
            "type": "string",
            "description": "Enum that represents the type of error/defect that occurred at a charging point.",
            "example": "RENEWAL_NECESSARY",
            "enum": [
              "DANGEROUS_MALFUNCTION",
              "USAGE_IMPOSSIBLE",
              "RENEWAL_NECESSARY"
            ]
          },
          "emergenceDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage emerged.",
            "example": "2024-11-15T23:59:59Z"
          },
          "forecastDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage should be repaired.",
            "example": "2024-11-15T23:59:59Z"
          },
          "fixDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage was repaired.",
            "example": "2024-11-15T23:59:59Z"
          }
        },
        "description": "Reporting the charging point defects processed."
      },
      "ProcessedFacilityDamagesResponse": {
        "required": [
          "emergenceDate",
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Facility Damage Uid.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "facilityType": {
            "type": "string",
            "description": "Enum that represents a auxiliary facility that is available at a charging hub.",
            "example": "VEHICLE_SUPPLIES_WINDSHIELD_WIPER_SYSTEM",
            "enum": [
              "ROOF",
              "FOOD_SERVICE",
              "SEATING",
              "SANITATION",
              "VEHICLE_SUPPLIES_AIR_PRESSURE",
              "VEHICLE_SUPPLIES_WINDSHIELD_WIPER_SYSTEM",
              "VEHICLE_SUPPLIES_VACUUM_CLEANER",
              "GREEN_ROOF",
              "PHOTOVOLTAIC_SYSTEM",
              "LIGHTING"
            ]
          },
          "emergenceDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage emerged.",
            "example": "2024-11-15T23:59:59Z"
          },
          "fixDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage was repaired.",
            "example": "2024-11-15T23:59:59Z"
          },
          "forecastDate": {
            "type": "string",
            "description": "'yyyy-MM-dd'T'HH:mm:ss.SS' formatted UTC datetime for when the damage should be repaired.",
            "example": "2024-11-15T23:59:59Z"
          }
        }
      },
      "ChargingHubResponse": {
        "type": "object",
        "properties": {
          "chargingHubUid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "description": "Enum that represents the german states using exactly 2 letters.",
            "enum": [
              "BB",
              "BE",
              "BW",
              "BY",
              "HB",
              "HE",
              "HH",
              "MV",
              "NI",
              "NW",
              "RP",
              "SH",
              "SL",
              "SN",
              "ST",
              "TH"
            ]
          },
          "coordinates": {
            "$ref": "#/components/schemas/GeoLocation"
          },
          "operator": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "auxiliaryFacilities": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Enum that represents a auxiliary facility that is available at a charging hub.",
              "enum": [
                "ROOF",
                "FOOD_SERVICE",
                "SEATING",
                "SANITATION",
                "VEHICLE_SUPPLIES_AIR_PRESSURE",
                "VEHICLE_SUPPLIES_WINDSHIELD_WIPER_SYSTEM",
                "VEHICLE_SUPPLIES_VACUUM_CLEANER",
                "GREEN_ROOF",
                "PHOTOVOLTAIC_SYSTEM",
                "LIGHTING"
              ]
            }
          },
          "negligibleDamages": {
            "type": "boolean"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ChargingPointResponse": {
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The Identity Key of the Charging Point",
            "example": "ACE123"
          },
          "evseId": {
            "maxLength": 48,
            "minLength": 0,
            "type": "string",
            "description": "The Evse ID of the connector",
            "example": "DE*ERG*E10001*1"
          },
          "status": {
            "type": "string",
            "description": "Enum that represents the status of an charging point.",
            "example": "UNKNOWN",
            "enum": [
              "AVAILABLE",
              "BLOCKED",
              "CHARGING",
              "INOPERATIVE",
              "OUTOFORDER",
              "PLANNED",
              "REMOVED",
              "RESERVED",
              "UNKNOWN"
            ]
          },
          "statusSchedule": {
            "type": "array",
            "description": "List of scheduled status changes.",
            "items": {
              "$ref": "#/components/schemas/StatusSchedule"
            }
          },
          "capabilities": {
            "type": "array",
            "description": "List of capabilities of the charging point.",
            "items": {
              "type": "string",
              "description": "List of capabilities of the charging point.",
              "enum": [
                "CHARGING_PROFILE_CAPABLE",
                "CHARGING_PREFERENCES_CAPABLE",
                "CHIP_CARD_SUPPORT",
                "CONTACTLESS_CARD_SUPPORT",
                "CREDIT_CARD_PAYABLE",
                "DEBIT_CARD_PAYABLE",
                "PED_TERMINAL",
                "REMOTE_START_STOP_CAPABLE",
                "RESERVABLE",
                "RFID_READER",
                "TOKEN_GROUP_CAPABLE",
                "UNLOCK_CAPABLE",
                "START_SESSION_CONNECTOR_REQUIRED"
              ]
            }
          },
          "connectors": {
            "type": "array",
            "description": "Set of connectors offered by the charging point.",
            "items": {
              "$ref": "#/components/schemas/ConnectorResponse"
            }
          },
          "negligibleDamages": {
            "type": "boolean",
            "description": "Flag that describes if there are any negligible damages at charging hub.",
            "example": false
          },
          "predecessor": {
            "type": "string",
            "description": "Unique ID of the predecessor of this charging point (if available).“",
            "example": "Predecessor id"
          },
          "statusLastUpdatedAt": {
            "type": "string",
            "description": "Last date and time when status of charging point is updated in ISO8601 format.",
            "example": "2024-09-10T22:32:38.408Z"
          }
        },
        "description": "Charging Point detailed response."
      },
      "ChargingStationResponse": {
        "required": [
          "shadow"
        ],
        "type": "object",
        "properties": {
          "identityKey": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "The Identity Key of the Charging Station",
            "example": "ACE123"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "The name of the Charging Station if no name given: “<Model Name> + <Charger ID>",
            "example": "WallBox NG Pro 21107439"
          },
          "shadow": {
            "$ref": "#/components/schemas/ChargingStationShadowCore"
          },
          "chargingPoints": {
            "type": "array",
            "description": "Charging Points that are associated with Charging Station.",
            "items": {
              "$ref": "#/components/schemas/ChargingPointResponse"
            }
          },
          "chargingHub": {
            "$ref": "#/components/schemas/ChargingHubResponse"
          }
        },
        "description": "Charging Station detailed response."
      },
      "ChargingStationShadowCore": {
        "maxLength": 30,
        "type": "object",
        "properties": {
          "model": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "The Charging Station model as specified by the vendor",
            "example": "Charger NG Pro"
          },
          "vendor": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The Charging Station vendor",
            "example": "alpitronic GmbH"
          }
        },
        "description": "Provides additional details about the charging station"
      },
      "ConnectorResponse": {
        "type": "object",
        "properties": {
          "connectorUid": {
            "type": "string",
            "description": " Identifier of the Connector within the EVSE. Two Connectors may have the same id as long as\n they do not belong to the same EVSE object.\n",
            "example": "1"
          },
          "standard": {
            "type": "string",
            "description": "The standard of the installed connector.",
            "enum": [
              "CHADEMO",
              "CHAOJI",
              "DOMESTIC_A",
              "DOMESTIC_B",
              "DOMESTIC_C",
              "DOMESTIC_D",
              "DOMESTIC_E",
              "DOMESTIC_F",
              "DOMESTIC_G",
              "DOMESTIC_H",
              "DOMESTIC_I",
              "DOMESTIC_J",
              "DOMESTIC_K",
              "DOMESTIC_L",
              "DOMESTIC_M",
              "DOMESTIC_N",
              "DOMESTIC_O",
              "GBT_AC",
              "GBT_DC",
              "IEC_60309_2_SINGLE_16",
              "IEC_60309_2_THREE_16",
              "IEC_60309_2_THREE_32",
              "IEC_60309_2_THREE_64",
              "IEC_62196_T1",
              "IEC_62196_T1_COMBO",
              "IEC_62196_T2",
              "IEC_62196_T2_COMBO",
              "IEC_62196_T3A",
              "IEC_62196_T3C",
              "NEMA_5_20",
              "NEMA_6_30",
              "NEMA_6_50",
              "NEMA_10_30",
              "NEMA_10_50",
              "NEMA_14_30",
              "NEMA_14_50",
              "PANTOGRAPH_BOTTOM_UP",
              "PANTOGRAPH_TOP_DOWN",
              "TESLA_R",
              "TESLA_S"
            ]
          },
          "powerType": {
            "type": "string",
            "enum": [
              "AC_1_PHASE",
              "AC_2_PHASE",
              "AC_2_PHASE_SPLIT",
              "AC_3_PHASE",
              "DC"
            ]
          },
          "format": {
            "type": "string",
            "description": "The format (socket/cable) of the installed connector.",
            "enum": [
              "SOCKET",
              "CABLE"
            ]
          },
          "voltage": {
            "type": "integer",
            "description": "Maximum voltage of the connector (line to neutral for AC_3_PHASE), in volt [V]. For example:\nDC Chargers might vary the voltage during charging when battery almost full.\n",
            "format": "int32",
            "example": 250
          },
          "amperage": {
            "type": "integer",
            "description": "Maximum amperage of the connector, in ampere [A].",
            "format": "int32",
            "example": 16
          },
          "maxPower": {
            "type": "integer",
            "description": "Maximum electric power that can be delivered by this connector, in Watts (W). When the maximum\nelectric power is lower than the calculated value from voltage and amperage, this value should be set.\nFor example: A DC Charge Point which can delivers up to 920V and up to 400A can be limited to a maximum\nof 150kW (max_electric_power = 150000). Depending on the car, it may supply max voltage or current, but not\nboth at the same time.\nFor AC Charge Points, the amount of phases used can also have influence on the maximum power.\n",
            "format": "int32",
            "example": 450
          }
        },
        "description": "Charging Point Connector response."
      },
      "StatusSchedule": {
        "required": [
          "period_begin",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status value during the scheduled period.",
            "enum": [
              "AVAILABLE",
              "BLOCKED",
              "CHARGING",
              "INOPERATIVE",
              "OUTOFORDER",
              "PLANNED",
              "REMOVED",
              "RESERVED",
              "UNKNOWN"
            ]
          },
          "period_begin": {
            "type": "string",
            "description": "Begin of the scheduled period.",
            "format": "date-time"
          },
          "period_end": {
            "type": "string",
            "description": "End of the scheduled period, if known.",
            "format": "date-time"
          }
        },
        "description": "This type is used to schedule status periods in the future. The eMSP can provide this information to the EV user for trip planning purposes. A period MAY have no end. Example: \"This station will be running as of tomorrow. Today it is still planned and under construction.\""
      },
      "ChargingPointProcessedReportResponse": {
        "type": "object",
        "properties": {
          "reportType": {
            "type": "string",
            "description": "Enum that represents report type that is available at a charging point.",
            "example": "RATING",
            "enum": [
              "RENEWAL",
              "CHARGING_POINT_DEFECT",
              "RATING"
            ]
          },
          "reportDate": {
            "type": "string",
            "description": "The date and time when the report was generated.",
            "format": "date-time"
          },
          "reportedBy": {
            "type": "string",
            "description": "The name of the person who created the report."
          },
          "modifiedBy": {
            "type": "string",
            "description": "The name of the person who last modified the report."
          },
          "uid": {
            "type": "string",
            "description": "The unique identifier of the report."
          },
          "lastModifiedDate": {
            "type": "string",
            "description": "The date and time when the report was modified.",
            "format": "date-time"
          }
        }
      },
      "ChargingPointShortResponse": {
        "type": "object",
        "properties": {
          "evseId": {
            "maxLength": 48,
            "minLength": 0,
            "type": "string",
            "description": "Unique EVSE ID of the form '{Country Code}{Spot Operator ID}{ID Type}{Power Outlet ID}'",
            "example": "DE*ABC*E45B*78C"
          },
          "status": {
            "type": "string",
            "description": "Enum that represents the status of an charging point.",
            "example": "UNKNOWN",
            "enum": [
              "AVAILABLE",
              "BLOCKED",
              "CHARGING",
              "INOPERATIVE",
              "OUTOFORDER",
              "PLANNED",
              "REMOVED",
              "RESERVED",
              "UNKNOWN"
            ]
          },
          "connectors": {
            "type": "array",
            "description": "Set of connectors offered by the charging point.",
            "items": {
              "$ref": "#/components/schemas/ConnectorShortResponse"
            }
          }
        },
        "description": "Charging Point page response."
      },
      "ChargingStationPaginatedResponse": {
        "type": "object",
        "properties": {
          "identityKey": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "The Identity Key of the Charging Station",
            "example": "ACE123"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "The name of the Charging Station if no name given: “<Model Name> + <Charger ID>",
            "example": "WallBox NG Pro 21107439"
          },
          "model": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "The Charging Station model as specified by the vendor",
            "example": "Charger NG Pro"
          },
          "lastUpdated": {
            "type": "string",
            "description": "Last time that someone modified the Charging Station.",
            "format": "date-time"
          },
          "evse": {
            "type": "array",
            "description": "Charging Points that are associated with Charging Station.",
            "items": {
              "$ref": "#/components/schemas/ChargingPointShortResponse"
            }
          }
        },
        "description": "Charging Station paginated response."
      },
      "ConnectorShortResponse": {
        "type": "object",
        "properties": {
          "connectorUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": " Identifier of the Connector within the EVSE. Two Connectors may have the same id as long as\n they do not belong to the same EVSE object.\n",
            "example": "1"
          },
          "standard": {
            "type": "string",
            "description": "The standard of the installed connector.",
            "enum": [
              "CHADEMO",
              "CHAOJI",
              "DOMESTIC_A",
              "DOMESTIC_B",
              "DOMESTIC_C",
              "DOMESTIC_D",
              "DOMESTIC_E",
              "DOMESTIC_F",
              "DOMESTIC_G",
              "DOMESTIC_H",
              "DOMESTIC_I",
              "DOMESTIC_J",
              "DOMESTIC_K",
              "DOMESTIC_L",
              "DOMESTIC_M",
              "DOMESTIC_N",
              "DOMESTIC_O",
              "GBT_AC",
              "GBT_DC",
              "IEC_60309_2_SINGLE_16",
              "IEC_60309_2_THREE_16",
              "IEC_60309_2_THREE_32",
              "IEC_60309_2_THREE_64",
              "IEC_62196_T1",
              "IEC_62196_T1_COMBO",
              "IEC_62196_T2",
              "IEC_62196_T2_COMBO",
              "IEC_62196_T3A",
              "IEC_62196_T3C",
              "NEMA_5_20",
              "NEMA_6_30",
              "NEMA_6_50",
              "NEMA_10_30",
              "NEMA_10_50",
              "NEMA_14_30",
              "NEMA_14_50",
              "PANTOGRAPH_BOTTOM_UP",
              "PANTOGRAPH_TOP_DOWN",
              "TESLA_R",
              "TESLA_S"
            ]
          }
        },
        "description": "Connector page response."
      },
      "ChargingSessionResponse": {
        "required": [
          "chargingHubUid",
          "chargingSessionUid",
          "connectorId",
          "end",
          "start",
          "tariffType",
          "totalCost",
          "totalEnergy",
          "totalParkingTime",
          "totalTime"
        ],
        "type": "object",
        "properties": {
          "chargingSessionUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Existent Charging Session uid provided by CPO and used to mapping with internal id.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The uid of the Charging Hub connected with the Charging Session by Charging point",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "chargingPointUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The uid of the Charging Point connected with the Charging Session",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "connectorId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Identifier of the connector within the EVSE."
          },
          "start": {
            "type": "string",
            "description": "The Date/Time when this charging sessions starts, in UTC.",
            "example": "2024-11-15T23:59:59"
          },
          "end": {
            "type": "string",
            "description": "The Date/Time when this charging sessions ends, in UTC.",
            "example": "2024-11-15T23:59:59"
          },
          "emaId": {
            "type": "string",
            "description": "Partly hashed authentication ID of the driver. Country code and provider ID should not be hashed.",
            "example": "DE-ABC-hashedPart"
          },
          "tariffType": {
            "type": "string",
            "description": "Enum that represents the type of tariff of a charging session.",
            "example": "AD_HOC_PAYMENT",
            "enum": [
              "ADD_HOC_PAYMENT",
              "PROFILE_CHEAP",
              "PROFILE_FAST",
              "PROFILE_GREEN",
              "REGULAR",
              "NON_BILLABLE"
            ]
          },
          "chargingPeriods": {
            "type": "array",
            "description": "A list of all charging periods of this charging session.",
            "items": {
              "$ref": "#/components/schemas/ChargingPeriod"
            }
          },
          "totalCost": {
            "type": "number",
            "description": "Total net cost (without VAT) of the charging session, including fixed costs, in Euro [€] for B2B pricing.",
            "example": 34.5
          },
          "totalEnergy": {
            "type": "number",
            "description": "Total amount of charged energy in kilowatt hour [kWh].",
            "example": 25.5
          },
          "totalTime": {
            "minimum": 0,
            "type": "integer",
            "description": "Total charging time in seconds [s].",
            "format": "int32",
            "example": 3600
          },
          "totalParkingTime": {
            "minimum": 0,
            "type": "integer",
            "description": "Total parking time without any charging in seconds [s].",
            "format": "int32",
            "example": 600
          },
          "reason": {
            "type": "string",
            "description": "Reason (OCPP) for ending the charging session.",
            "example": "POWERLOSS",
            "enum": [
              "EMERGENCY_STOP",
              "EV_DISCONNECTED",
              "HARDRESET",
              "LOCAL",
              "OTHER",
              "POWERLOSS",
              "REBOOT",
              "REMOTE",
              "SOFT_RESET",
              "UNLOCK_COMMAND",
              "DEAUTHORIZED"
            ]
          }
        }
      },
      "ChargingHubProcessedReportResponse": {
        "type": "object",
        "properties": {
          "reportName": {
            "type": "string",
            "description": "Enum that represents report type that is available at a charging hub.",
            "example": "AD_HOC_TARIFF",
            "enum": [
              "AD_HOC_TARIFF",
              "FACILITY_DAMAGES",
              "RATING"
            ]
          },
          "reportDate": {
            "type": "string",
            "description": "The date and time when the report was generated.",
            "format": "date-time"
          },
          "reportedBy": {
            "type": "string",
            "description": "The name of the person who created the report."
          },
          "modifiedBy": {
            "type": "string",
            "description": "The name of the person who last modified the report."
          },
          "uid": {
            "type": "string",
            "description": "The unique identifier of the report."
          },
          "lastModifiedDate": {
            "type": "string",
            "description": "The date and time when the report was modified.",
            "format": "date-time"
          }
        }
      },
      "ChargingHubPaginatedResponse": {
        "required": [
          "coordinates"
        ],
        "type": "object",
        "properties": {
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Existent Charging Hub UID provided by CPO and used to mapping with internal uid.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Six-digit contract manager ID of charging hub, hyphen and self-selected name.",
            "example": "130950-Parkplatz am Weissen Ross"
          },
          "address": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "description": "Address of the charging hub.",
            "example": "Am Stellwerk 1"
          },
          "city": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "description": "City of the charging hub.",
            "example": "Stuttgart"
          },
          "lastModifiedDate": {
            "type": "string",
            "description": "Last time that someone modified the charging hub.",
            "format": "date-time"
          },
          "chargingStations": {
            "type": "integer",
            "description": "The number of charging stations that are associated with charging hub.",
            "format": "int64",
            "example": 4
          },
          "coordinates": {
            "$ref": "#/components/schemas/GeoLocation"
          }
        },
        "description": "Charging Hub paginated response."
      },
      "ChargingHubShortResponse": {
        "type": "object",
        "properties": {
          "chargingHubUid": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Existent Charging Hub UID provided by CPO and used to mapping with internal uid.",
            "example": "5459fd2c-b75e-4a93-8fcb-2dde5d2fc611"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Six-digit contract manager ID of charging hub, hyphen and self-selected name.",
            "example": "130950-Parkplatz am Weissen Ross"
          }
        },
        "description": "Charging Hub response."
      }
    },
    "examples": {
      "OBELIS_AUTHORIZATION_ERROR": {
        "value": "{\n  \"message\" : \"[OBELIS] Could not authorize against OBELIS external service.\",\n  \"errorCode\" : \"OBELIS_AUTHORIZATION_ERROR\"\n}"
      },
      "CHARGING_HUB_DOES_NOT_EXIST": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging Hub with the provided ID could not be found.\",\n  \"errorCode\" : \"CHARGING_HUB_DOES_NOT_EXIST\"\n}"
      },
      "CHARGING_HUB_UID_ALREADY_EXISTS": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging hub with the same id already exists.\",\n  \"errorCode\" : \"CHARGING_HUB_UID_ALREADY_EXISTS\"\n}"
      },
      "CHARGING_HUB_COORDINATES_ALREADY_EXISTS": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging hub with the same coordinates already exists.\",\n  \"errorCode\" : \"CHARGING_HUB_COORDINATES_ALREADY_EXISTS\"\n}"
      },
      "CHARGING_STATION_IDENTITY_KEY_ALREADY_EXISTS": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging station with the same identity key already exists.\",\n  \"errorCode\" : \"CHARGING_STATION_IDENTITY_KEY_ALREADY_EXISTS\"\n}"
      },
      "CHARGING_STATION_WITH_IDENTITY_KEY_WAS_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging station with identity key was not found.\",\n  \"errorCode\" : \"CHARGING_STATION_WITH_IDENTITY_KEY_WAS_NOT_FOUND\"\n}"
      },
      "CHARGING_STATION_HAS_ASSOCIATED_STATIONS": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging station cannot be delete as long as charging points are assigned to it.\",\n  \"errorCode\" : \"CHARGING_STATION_HAS_ASSOCIATED_STATIONS\"\n}"
      },
      "EVSE_ID_ALREADY_EXISTS": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging point with the same evseId already exists.\",\n  \"errorCode\" : \"EVSE_ID_ALREADY_EXISTS\"\n}"
      },
      "CHARGING_HUB_HAS_ASSOCIATED_STATIONS": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging Hub cannot be delete as long as charging station is assigned to it.\",\n  \"errorCode\" : \"CHARGING_HUB_HAS_ASSOCIATED_STATIONS\"\n}"
      },
      "CHARGING_SESSION_DOES_NOT_EXIST": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging session with provided uid does not exist.\",\n  \"errorCode\" : \"CHARGING_SESSION_DOES_NOT_EXIST\"\n}"
      },
      "CHARGING_SESSION_UID_ALREADY_EXISTS": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging session with the same uid for provided charging point and charging hub already exists.\",\n  \"errorCode\" : \"CHARGING_SESSION_UID_ALREADY_EXISTS\"\n}"
      },
      "CHARGING_SESSION_START_TIME_NEEDS_TO_BE_BEFORE_SESSION_END_TIME": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging session start time needs to be before charging session end time.\",\n  \"errorCode\" : \"CHARGING_SESSION_START_TIME_NEEDS_TO_BE_BEFORE_SESSION_END_TIME\"\n}"
      },
      "CHARGING_PERIOD_START_TIME_NEEDS_TO_BE_INSIDE_CHARGING_SESSION_START_END_TIME_RANGE": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging period start time needs to be inside session start and end time range.\",\n  \"errorCode\" : \"CHARGING_PERIOD_START_TIME_NEEDS_TO_BE_INSIDE_CHARGING_SESSION_START_END_TIME_RANGE\"\n}"
      },
      "CHARGING_POINT_DOES_NOT_EXIST": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging point with the provided uid can not be found.\",\n  \"errorCode\" : \"CHARGING_POINT_DOES_NOT_EXIST\"\n}"
      },
      "CHARGING_POINT_CONNECTED_TO_PROVIDED_CHARGING_HUB_DOES_NOT_EXIST": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging point with provided uid connected to the charging hub with provided uid does not exist.\",\n  \"errorCode\" : \"CHARGING_POINT_CONNECTED_TO_PROVIDED_CHARGING_HUB_DOES_NOT_EXIST\"\n}"
      },
      "CONNECTOR_DOES_NOT_EXIST": {
        "value": "{\n  \"message\" : \"[OBELIS] Connector with provided uid does not exist\",\n  \"errorCode\" : \"CONNECTOR_DOES_NOT_EXIST\"\n}"
      },
      "AD_HOC_TARIFF_REPORT_ALREADY_EXISTS": {
        "value": "{\n  \"message\" : \"[OBELIS] Ad Hoc Tariff report for their charging hub id and month already exists.\",\n  \"errorCode\" : \"AD_HOC_TARIFF_REPORT_ALREADY_EXISTS\"\n}"
      },
      "RAW_AD_HOC_TARIFF_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OBELIS] Raw ad-hoc tariff for given charging hub and month not found.\",\n  \"errorCode\" : \"RAW_AD_HOC_TARIFF_NOT_FOUND\"\n}"
      },
      "RAW_AD_HOC_TARIFF_UID_NUMBER_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OBELIS] Raw ad-hoc tariff for given UID not found.\",\n  \"errorCode\" : \"RAW_AD_HOC_TARIFF_UID_NUMBER_NOT_FOUND\"\n}"
      },
      "MONTH_ON_REPORT_NOT_VALID": {
        "value": "{\n  \"message\" : \"[OBELIS] Invalid month, accept only data for the previous month\",\n  \"errorCode\" : \"MONTH_ON_REPORT_NOT_VALID\"\n}"
      },
      "VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM": {
        "value": "{\n  \"message\" : \"[OBELIS] ValidFrom date can't be before or equal to ValidTo date.\",\n  \"errorCode\" : \"VALID_TO_DATE_IS_BEFORE_OR_EQUAL_TO_VALID_FROM\"\n}"
      },
      "CHARGING_POINT_FOR_CHARGING_STATION_DOES_NOT_EXISTS": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging point with provided uid for specified charging station does not exist.\",\n  \"errorCode\" : \"CHARGING_POINT_FOR_CHARGING_STATION_DOES_NOT_EXISTS\"\n}"
      },
      "CHARGING_HUB_FOR_CHARGING_STATION_DOES_NOT_EXISTS": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging hub for specified charging station does not exist.\",\n  \"errorCode\" : \"CHARGING_HUB_FOR_CHARGING_STATION_DOES_NOT_EXISTS\"\n}"
      },
      "CONNECTORS_SIZE_DO_NOT_MATCH": {
        "value": "{\n  \"message\" : \"[OBELIS] Connectors size in request and entity don't match.\",\n  \"errorCode\" : \"CONNECTORS_SIZE_DO_NOT_MATCH\"\n}"
      },
      "FACILITY_DAMAGES_REPORT_ALREADY_EXISTS": {
        "value": "{\n  \"message\" : \"[OBELIS] Facility Damages report with this uid already exists.\",\n  \"errorCode\" : \"FACILITY_DAMAGES_REPORT_ALREADY_EXISTS\"\n}"
      },
      "RAW_FACILITY_DAMAGES_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OBELIS] Raw facility damages report for given uid not found.\",\n  \"errorCode\" : \"RAW_FACILITY_DAMAGES_NOT_FOUND\"\n}"
      },
      "RAW_FACILITY_DAMAGES_UID_NUMBER_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OBELIS] Raw facility damages for given UID not found.\",\n  \"errorCode\" : \"RAW_FACILITY_DAMAGES_UID_NUMBER_NOT_FOUND\"\n}"
      },
      "UNPROCESSED_RAW_FACILITY_DAMAGES": {
        "value": "{\n  \"message\" : \"[OBELIS] Unprocessed Raw facility damages not found.\",\n  \"errorCode\" : \"UNPROCESSED_RAW_FACILITY_DAMAGES\"\n}"
      },
      "RATING_REPORT_ALREADY_EXISTS": {
        "value": "{\n  \"message\" : \"[OBELIS] Rating report for the charging hub id and month already exists.\",\n  \"errorCode\" : \"RATING_REPORT_ALREADY_EXISTS\"\n}"
      },
      "RAW_RATING_REPORT_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OBELIS] Raw Rating report for given charging hub and month not found.\",\n  \"errorCode\" : \"RAW_RATING_REPORT_NOT_FOUND\"\n}"
      },
      "RAW_RATING_UID_NUMBER_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OBELIS] Raw Rating report for given UID not found.\",\n  \"errorCode\" : \"RAW_RATING_UID_NUMBER_NOT_FOUND\"\n}"
      },
      "CANT_CHANGE_CHARGING_HUB_OF_AN_ALREADY_CREATED_STATION": {
        "value": "{\n  \"message\" : \"[OBELIS] Operation not supported. Can not move charging station to a different charging hub.\",\n  \"errorCode\" : \"CANT_CHANGE_CHARGING_HUB_OF_AN_ALREADY_CREATED_STATION\"\n}"
      },
      "PROCESSED_RATING_UID_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OBELIS] Processed Rating report for given UID not found.\",\n  \"errorCode\" : \"PROCESSED_RATING_UID_NOT_FOUND\"\n}"
      },
      "END_DATE_IS_BEFORE_TO_START_DATE": {
        "value": "{\n  \"message\" : \"[OBELIS] EndDateTime is before startDateTime.\",\n  \"errorCode\" : \"END_DATE_IS_BEFORE_TO_START_DATE\"\n}"
      },
      "PROCESSED_FACILITY_DAMAGES_UID_NUMBER_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OBELIS] Processed Facility Damages report for given UID not found.\",\n  \"errorCode\" : \"PROCESSED_FACILITY_DAMAGES_UID_NUMBER_NOT_FOUND\"\n}"
      },
      "RENEWAL_RAW_CHARGING_POINT_REPORT_ALREADY_EXISTS": {
        "value": "{\n  \"message\" : \"[OBELIS] Raw Renewal report with provided uid connected to provided charging hub and charging point already exist.\",\n  \"errorCode\" : \"RENEWAL_RAW_CHARGING_POINT_REPORT_ALREADY_EXISTS\"\n}"
      },
      "RENEWAL_START_TIME_NEEDS_TO_BE_BEFORE_END_TIME": {
        "value": "{\n  \"message\" : \"[OBELIS] Renewal start time needs to be before renewal end time.\",\n  \"errorCode\" : \"RENEWAL_START_TIME_NEEDS_TO_BE_BEFORE_END_TIME\"\n}"
      },
      "CHARGING_POINT_NOT_ASSOCIATED_WITH_CHARGING_HUB": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging point uid is not associated with the provided charging hub uid.\",\n  \"errorCode\" : \"CHARGING_POINT_NOT_ASSOCIATED_WITH_CHARGING_HUB\"\n}"
      },
      "IDENTITY_KEY_NOT_ASSOCIATED_WITH_CHARGING_POINT": {
        "value": "{\n  \"message\" : \"[OBELIS] The provided identity key is not associated either with charging point.\",\n  \"errorCode\" : \"IDENTITY_KEY_NOT_ASSOCIATED_WITH_CHARGING_POINT\"\n}"
      },
      "RENEWAL_RAW_CHARGING_POINT_DOES_NOT_EXIST_FOR_PROVIDED_UID": {
        "value": "{\n  \"message\" : \"[OBELIS] Raw renewal report does not exist for provide uid\",\n  \"errorCode\" : \"RENEWAL_RAW_CHARGING_POINT_DOES_NOT_EXIST_FOR_PROVIDED_UID\"\n}"
      },
      "RAW_RATING_REPORT_FOR_IDENTITY_KEY_KEY_AND_MONTH_YEAR_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OBELIS] Raw Rating report for given charging identityKey and montYear were not found.\",\n  \"errorCode\" : \"RAW_RATING_REPORT_FOR_IDENTITY_KEY_KEY_AND_MONTH_YEAR_NOT_FOUND\"\n}"
      },
      "PROCESSED_RATING_REPORT_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OBELIS] Processed Rating report for given uid were not found.\",\n  \"errorCode\" : \"PROCESSED_RATING_REPORT_NOT_FOUND\"\n}"
      },
      "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE": {
        "value": "{\n  \"message\" : \"[OBELIS] Emergence date is later than forecast date.\",\n  \"errorCode\" : \"REPORT_EMERGENCE_DATE_IS_LATER_THAN_FORECAST_DATE\"\n}"
      },
      "CHARGING_POINT_DEFECTS_REPORT_ALREADY_EXISTS": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging Point Defects report with this uid already exists.\",\n  \"errorCode\" : \"CHARGING_POINT_DEFECTS_REPORT_ALREADY_EXISTS\"\n}"
      },
      "RAW_CHARGING_POINT_DEFECT_UID_NUMBER_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging Point Defects raw report for given UID not found.\",\n  \"errorCode\" : \"RAW_CHARGING_POINT_DEFECT_UID_NUMBER_NOT_FOUND\"\n}"
      },
      "PROCESSED_CHARGING_POINT_DEFECT_UID_NUMBER_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OBELIS] Processed Charging Point Defects report for given UID not found.\",\n  \"errorCode\" : \"PROCESSED_CHARGING_POINT_DEFECT_UID_NUMBER_NOT_FOUND\"\n}"
      },
      "RENEWAL_PROCESSED_CHARGING_POINT_REPORT_ALREADY_EXISTS": {
        "value": "{\n  \"message\" : \"[OBELIS] Processed Renewal report with provided uid already exists.\",\n  \"errorCode\" : \"RENEWAL_PROCESSED_CHARGING_POINT_REPORT_ALREADY_EXISTS\"\n}"
      },
      "RENEWAL_PROCESSED_CHARGING_POINT_DOES_NOT_EXIST_FOR_PROVIDED_UID": {
        "value": "{\n  \"message\" : \"[OBELIS] Processed renewal report does not exist for provide uid.\",\n  \"errorCode\" : \"RENEWAL_PROCESSED_CHARGING_POINT_DOES_NOT_EXIST_FOR_PROVIDED_UID\"\n}"
      },
      "HOTLINE_RATING_REPORT_ALREADY_EXISTS": {
        "value": "{\n  \"message\" : \"[OBELIS] Hotline rating report for the provided month already exists.\",\n  \"errorCode\" : \"HOTLINE_RATING_REPORT_ALREADY_EXISTS\"\n}"
      },
      "HOTLINE_RATING_REPORT_MONTH_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OBELIS] Hotline raw rating report for given month not found.\",\n  \"errorCode\" : \"HOTLINE_RATING_REPORT_MONTH_NOT_FOUND\"\n}"
      },
      "HOTLINE_RATING_REPORT_UID_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OBELIS] Hotline raw rating report for given uid not found.\",\n  \"errorCode\" : \"HOTLINE_RATING_REPORT_UID_NOT_FOUND\"\n}"
      },
      "NON_DISCRIMINATORY_ACCESS_REPORT_ALREADY_EXISTS": {
        "value": "{\n  \"message\" : \"[OBELIS] Non-Discriminatory Access report for their provider group and month already exists.\",\n  \"errorCode\" : \"NON_DISCRIMINATORY_ACCESS_REPORT_ALREADY_EXISTS\"\n}"
      },
      "PROVIDER_GROUP_DO_NOT_START_WITH_2_CAPITAL_LETTERS": {
        "value": "{\n  \"message\" : \"[OBELIS] The providerGroup must be 5 uppercase characters starting with 2 letters\",\n  \"errorCode\" : \"PROVIDER_GROUP_DO_NOT_START_WITH_2_CAPITAL_LETTERS\"\n}"
      },
      "NON_DISCRIMINATORY_ACCESS_REPORT_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OBELIS] Non-Discriminatory Access report for given uid not found.\",\n  \"errorCode\" : \"NON_DISCRIMINATORY_ACCESS_REPORT_NOT_FOUND\"\n}"
      },
      "PROVIDER_GROUP_CHANGED": {
        "value": "{\n  \"message\" : \"[OBELIS] The provider group cannot be modified in the non-discriminatory access report.\",\n  \"errorCode\" : \"PROVIDER_GROUP_CHANGED\"\n}"
      },
      "CHARGING_STATION_WITH_IDENTITY_KEY_DOES_NOT_EXIST": {
        "value": "{\n  \"message\" : \"[OBELIS] Charging station with provided identity key does not exist.\",\n  \"errorCode\" : \"CHARGING_STATION_WITH_IDENTITY_KEY_DOES_NOT_EXIST\"\n}"
      },
      "DUPLICATED_CONNECTOR_UIDS": {
        "value": "{\n  \"message\" : \"[OBELIS] Duplicate connector uids are not allowed.\",\n  \"errorCode\" : \"DUPLICATED_CONNECTOR_UIDS\"\n}"
      },
      "REPORT_EMERGENCE_DATE_IS_LATER_THAN_FIX_DATE": {
        "value": "{\n  \"message\" : \"[OBELIS] Emergence date is later than fix date.\",\n  \"errorCode\" : \"REPORT_EMERGENCE_DATE_IS_LATER_THAN_FIX_DATE\"\n}"
      },
      "UNSORTABLE_COLUMN": {
        "value": "{\n  \"message\" : \"The entered sorting column is not sortable in ElasticSearch (Column is not a @Keyword).\",\n  \"errorCode\" : \"UNSORTABLE_COLUMN\"\n}"
      },
      "REST_STATUS_ELASTICSEARCH_RELATED": {
        "value": "{\n  \"message\" : \"RestStatusException related to ElasticSearch\",\n  \"errorCode\" : \"REST_STATUS_ELASTICSEARCH_RELATED\"\n}"
      },
      "PROCESSING_ERROR": {
        "value": "{\n  \"message\" : \"Error while processing the data\",\n  \"errorCode\" : \"PROCESSING_ERROR\"\n}"
      },
      "ACCESS_DENIED": {
        "value": "{\n  \"message\" : \"Access to route has been denied.\",\n  \"errorCode\" : \"ACCESS_DENIED\"\n}"
      },
      "INTERNAL_SERVER_ERROR": {
        "value": "{\n  \"message\" : \"An error occurred\",\n  \"errorCode\" : \"INTERNAL_SERVER_ERROR\"\n}"
      },
      "BAD_REQUEST": {
        "value": "{\n  \"message\" : \"Bad request\",\n  \"errorCode\" : \"BAD_REQUEST\"\n}"
      },
      "NOT_FOUND": {
        "value": "{\n  \"message\" : \"Requested object not found\",\n  \"errorCode\" : \"NOT_FOUND\"\n}"
      },
      "UNAUTHORIZED": {
        "value": "{\n  \"message\" : \"Unauthorized\",\n  \"errorCode\" : \"UNAUTHORIZED\"\n}"
      },
      "FORBIDDEN": {
        "value": "{\n  \"message\" : \"Forbidden\",\n  \"errorCode\" : \"FORBIDDEN\"\n}"
      },
      "UNAUTHENTICATED": {
        "value": "{\n  \"message\" : \"Unauthenticated\",\n  \"errorCode\" : \"UNAUTHENTICATED\"\n}"
      },
      "METHOD_ARGUMENT_TYPE_MISMATCH": {
        "value": "{\n  \"message\" : \"Failed to convert value to required type\",\n  \"errorCode\" : \"METHOD_ARGUMENT_TYPE_MISMATCH\"\n}"
      },
      "MAXIMUM_UPLOAD_SIZE_EXCEEDED": {
        "value": "{\n  \"message\" : \"Maximum upload size exceeded\",\n  \"errorCode\" : \"MAXIMUM_UPLOAD_SIZE_EXCEEDED\"\n}"
      },
      "METHOD_NOT_ALLOWED": {
        "value": "{\n  \"message\" : \"Request method is not supported\",\n  \"errorCode\" : \"METHOD_NOT_ALLOWED\"\n}"
      },
      "MISSING_REQUEST_PARAMETER": {
        "value": "{\n  \"message\" : \"Required request parameter is not present\",\n  \"errorCode\" : \"MISSING_REQUEST_PARAMETER\"\n}"
      },
      "MISSING_REQUEST_PART": {
        "value": "{\n  \"message\" : \"Required request part is not present\",\n  \"errorCode\" : \"MISSING_REQUEST_PART\"\n}"
      },
      "UNSUPPORTED_MEDIA_TYPE": {
        "value": "{\n  \"message\" : \"Media type is not supported\",\n  \"errorCode\" : \"UNSUPPORTED_MEDIA_TYPE\"\n}"
      },
      "LIST_CONTAINS_NULL_VALUES": {
        "value": "{\n  \"message\" : \"List contains null values\",\n  \"errorCode\" : \"LIST_CONTAINS_NULL_VALUES\"\n}"
      },
      "REMOTE_CALL_FAILED": {
        "value": "{\n  \"message\" : \"Call to remote API returned an error response\",\n  \"errorCode\" : \"REMOTE_CALL_FAILED\"\n}"
      },
      "ALREADY_EXISTS": {
        "value": "{\n  \"message\" : \"Object already exists\",\n  \"errorCode\" : \"ALREADY_EXISTS\"\n}"
      },
      "SOFTLY_DELETED": {
        "value": "{\n  \"message\" : \"Object is softly deleted\",\n  \"errorCode\" : \"SOFTLY_DELETED\"\n}"
      },
      "WRONG_SORTING_COLUMN": {
        "value": "{\n  \"message\" : \"The entered sorting column name does not exist.\",\n  \"errorCode\" : \"WRONG_SORTING_COLUMN\"\n}"
      },
      "COULD_NOT_EXTRACT_ERROR_FROM_RESPONSE": {
        "value": "{\n  \"message\" : \"Could not extract error from the response.\",\n  \"errorCode\" : \"COULD_NOT_EXTRACT_ERROR_FROM_RESPONSE\"\n}"
      },
      "FAILED_TO_DELETE_TEMPORARY_FILE": {
        "value": "{\n  \"message\" : \"Failed to delete temporary file\",\n  \"errorCode\" : \"FAILED_TO_DELETE_TEMPORARY_FILE\"\n}"
      },
      "TENANT_ID_MUST_BE_SINGLETON": {
        "value": "{\n  \"message\" : \"Tenant ID must be a single value parameter\",\n  \"errorCode\" : \"TENANT_ID_MUST_BE_SINGLETON\"\n}"
      },
      "TENANT_ID_MUST_BE_INTEGER": {
        "value": "{\n  \"message\" : \"Tenant ID must be integer\",\n  \"errorCode\" : \"TENANT_ID_MUST_BE_INTEGER\"\n}"
      },
      "INVALID_PROPERTY": {
        "value": "{\n  \"message\" : \"Requested property is not valid.\",\n  \"errorCode\" : \"INVALID_PROPERTY\"\n}"
      },
      "USER_NOT_FOUND": {
        "value": "{\n  \"message\" : \"The entered user does not exist.\",\n  \"errorCode\" : \"USER_NOT_FOUND\"\n}"
      },
      "USER_ALREADY_HAS_ACCESS": {
        "value": "{\n  \"message\" : \"The user already has access\",\n  \"errorCode\" : \"USER_ALREADY_HAS_ACCESS\"\n}"
      },
      "USER_ACCESS_REQUEST_NOT_FOUND": {
        "value": "{\n  \"message\" : \"The entered user access request does not exist.\",\n  \"errorCode\" : \"USER_ACCESS_REQUEST_NOT_FOUND\"\n}"
      },
      "VERSION_FOR_TOKEN_A_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OCPI-GATEWAY] Version for the specific token A is not found.\",\n  \"errorCode\" : \"VERSION_FOR_TOKEN_A_NOT_FOUND\"\n}"
      },
      "URL_ALREADY_IN_DATABASE": {
        "value": "{\n  \"message\" : \"[OCPI-GATEWAY] The provided URL already exists.\",\n  \"errorCode\" : \"URL_ALREADY_IN_DATABASE\"\n}"
      },
      "URL_NOT_FOUND": {
        "value": "{\n  \"message\" : \"[OCPI-GATEWAY] Customer url info for the specific url in not found.\",\n  \"errorCode\" : \"URL_NOT_FOUND\"\n}"
      },
      "URL_ALREADY_EXISTS": {
        "value": "{\n  \"message\" : \"[OCPI-GATEWAY] One of the provided URLs already exists.\",\n  \"errorCode\" : \"URL_ALREADY_EXISTS\"\n}"
      },
      "FILE_IS_NOT_IMAGE": {
        "value": "{\n  \"message\" : \"The file isn't image.\",\n  \"errorCode\" : \"FILE_IS_NOT_IMAGE\"\n}"
      },
      "FORMAT_NOT_SUPPORTED": {
        "value": "{\n  \"message\" : \"The logo format not supported\",\n  \"errorCode\" : \"FORMAT_NOT_SUPPORTED\"\n}"
      },
      "EXTENSION_MISSING": {
        "value": "{\n  \"message\" : \"The logo extension missing\",\n  \"errorCode\" : \"EXTENSION_MISSING\"\n}"
      }
    },
    "headers": {
      "api-category": {
        "description": "CPO Services",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "display-name": {
        "description": "CPO Obelis",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    }
  }
}